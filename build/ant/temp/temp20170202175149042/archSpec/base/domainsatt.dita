<?xml version="1.0" encoding="UTF-8"?><?workdir /Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base?><?workdir-uri file:/Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base/?><?path2project ../../?><?path2project-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept)                            (topic abbrev-d)                            a(props deliveryTarget)                            (topic equation-d)                            (topic hazard-d)                            (topic hi-d)                            (topic indexing-d)                            (topic markup-d)                            (topic mathml-d)                            (topic pr-d)                            (topic relmgmt-d)                            (topic sw-d)                            (topic svg-d)                            (topic ui-d)                            (topic ut-d)                            (topic markup-d xml-d)   " id="domainsatt" xml:lang="en-us" xtrc="concept:1;4:43" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
<title class="- topic/title " xtrc="title:1;5:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita"><xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;5:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute</title>
<shortdesc class="- topic/shortdesc " rev="DITA1.3 proposal-13121" xtrc="shortdesc:1;6:41" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">Structural types <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:1;7:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">MUST</term> declare the domain vocabulary modules and constraint modules
    that they use, as well as any dependencies that they have on elements from other (non-ancestor)
    structural modules. This is done using a <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;9:54" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute value that is a
    sequence of parenthesized module ancestry specifications. The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;10:75" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute
    is declared on the root element for each topic or map type. Structural modules <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:2;12:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">SHOULD</term> declare their structural ancestry, and
    structural modules <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:3;13:71" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">MUST</term> do so when they
    have dependencies on structural modules other than their ancestors.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;13:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/dita-1.3-specification-base.ditamap">OASIS DITA Technical Committee</author></prolog>
<conbody class="- topic/body  concept/conbody " xtrc="conbody:1;15:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
<p class="- topic/p " xtrc="p:1;17:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">Each structural, element, and attribute domain defines its module ancestry as a parenthesized sequence of space-separated module names from root module to provided module. </p>
    <p class="- topic/p " xtrc="p:2;18:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">For element domains, the group syntax
      is:<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:1;19:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita"> '(', <varname class="+ topic/keyword sw-d/varname " xtrc="varname:1;19:36" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">modulename</varname>, (' ', <varname class="+ topic/keyword sw-d/varname " xtrc="varname:2;19:73" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">module-plus-optional-dependency-list</varname>)+, ')'</codeblock></p>
    <p class="- topic/p " xtrc="p:3;20:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">For attribute domains, the group syntax
      is:<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:2;21:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita"> 'a(', <varname class="+ topic/keyword sw-d/varname " xtrc="varname:3;21:37" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">attname</varname>, (' ', <varname class="+ topic/keyword sw-d/varname " xtrc="varname:4;21:71" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">attname</varname>)+, ')'</codeblock></p>
    <p class="- topic/p " xtrc="p:4;22:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">The module ancestry specifications are added to the effective value of the
        <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;23:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute to form a set of specifications, one for each domain that
      is used by the topic or map type.</p>
    <p class="- topic/p " xtrc="p:5;25:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;25:20" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> values for the different module types are as follows:<dl class="- topic/dl " xtrc="dl:1;25:94" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
        <dlentry class="- topic/dlentry " rev="DITA1.3 proposal-13121" xtrc="dlentry:1;26:47" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
          <dt class="- topic/dt " xtrc="dt:1;27:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">structural modules</dt>
          <dd class="- topic/dd " xtrc="dd:1;28:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
            <p class="- topic/p " xtrc="p:6;29:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">The structural type ancestry. For example: <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:1;29:67" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">(topic concept
                glossentry)</codeph>. </p>
            <p class="- topic/p " xtrc="p:7;31:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">When a structural module has elements that directly reference or specialize elements
              from another structural, domain, or attribute module, the structural module's
                <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:6;33:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> specification <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:4;34:35" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">MUST</term> include the names of the other modules as dependencies
              following the name of the <ph class="- topic/ph " rev="review-2" xtrc="ph:1;35:60" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">reusing structural module</ph>.</p>
            <p class="- topic/p " xtrc="p:8;36:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">Dependencies on domain or attribute specialization modules are appended to the
              reusing module's value, or to previous dependencies, separated by "+". Dependencies on
              structural specialization modules are appended to the reusing module's value, or to
              previous dependencies, separated by "++".</p>
            <p class="- topic/p " xtrc="p:9;40:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">A dependency exists on an element domain module, or a structural module, whenever a
              specialization uses one or more elements from such a module. A dependency exists on an
              attribute domain module whenever a specialization binds one or more of its element
              attribute definitions to definitions in the attribute domain module.</p>
            <p class="- topic/p " xtrc="p:10;44:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita"> For example, a cppAPIRef specialization that has a dependency on the cpp-d element
              domain and compilerTypeAtt-d attribute domain would need to include a domain value
              that showed the dependencies as follows: <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:2;46:64" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">(topic reference
                cppApiRef+cpp-d+compilerTypeAtt-d)</codeph>. A codeChecklist specialization that has
              a dependency on the pr-d domain and the task structural specialization would show
              dependencies as follows: <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:3;49:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">(topic reference
              codeChecklist+pr-d++task)</codeph></p>
          </dd>
        </dlentry>
        <dlentry class="- topic/dlentry " rev="DITA1.3 proposal-13121" xtrc="dlentry:2;53:47" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
          <dt class="- topic/dt " xtrc="dt:2;54:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">structural module dependencies</dt>
          <dd class="- topic/dd " xtrc="dd:2;55:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
            <p class="- topic/p " xtrc="p:11;56:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">The structural type ancestry of the structural type whose elements are being reused.
              For example, if a troubleshooting module reuses elements from the task structural
              module, then it must include both a dependency on task in the troubleshooting ancestry
              value, and the ancestry of task in a separate value: <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:4;59:76" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">(topic
                troubleshooting++task) (topic task)</codeph></p>
          </dd>
        </dlentry>
        <dlentry class="- topic/dlentry " xtrc="dlentry:3;63:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
          <dt class="- topic/dt " xtrc="dt:3;64:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">constraint modules</dt>
          <dd class="- topic/dd " xtrc="dd:3;65:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">The structural type ancestry followed by the name of the constraint domain. For
            example: <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:5;66:30" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">(topic task strictTaskbody-c)</codeph>. </dd>
        </dlentry>
        <dlentry class="- topic/dlentry " xtrc="dlentry:4;68:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
          <dt class="- topic/dt " xtrc="dt:4;69:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">element domains</dt>
          <dd class="- topic/dd " xtrc="dd:4;70:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">The structural type ancestry and, if applicable, the domain module ancestry from which
            the domain is specialized. For example: <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:6;71:61" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">(topic hi-d)</codeph>
            <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:7;72:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">(topic pr-d cpp-d)</codeph>.</dd>
        </dlentry>
        <dlentry class="- topic/dlentry " xtrc="dlentry:5;74:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
          <dt class="- topic/dt " xtrc="dt:5;75:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">attribute domains</dt>
          <dd class="- topic/dd " xtrc="dd:5;76:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">The attribute specialization hierarchy. For example: <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:8;76:76" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">a(props
              mySelectAttribute)</codeph>. </dd>
        </dlentry>
      </dl></p>
<p class="- topic/p " xtrc="p:12;80:4" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:7;80:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute allows processors to determine whether two elements use
      compatible domains. For example, when pasting content from one topic into another topic within
      an editor, the editor can use the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:8;82:49" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute to determine if the topic
      domains of the paste target are compatible with the topic domains of the paste source, and
      therefore whether the pasted content needs to be generalized before it can be pasted.
      Likewise, processors can use the value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:9;85:61" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute to determine
      if they have whatever may be necessary to support a particular domain.</p>
    <p class="- topic/p " xtrc="p:13;87:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">Another example is when an element <ph class="- topic/ph " rev="DITA1.3 review-2" xtrc="ph:2;87:70" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">uses <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:10;87:83" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">conref</xmlatt> to
        reference</ph> an element that is a more specialized version of the element, for example, a
        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;89:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">li</xmlelement> element in a concept topic references a
        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;90:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">step</xmlelement> element in a task topic. During processing, the
        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:3;91:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">step</xmlelement> element will be generalized back to a
        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:4;92:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">li</xmlelement> element.</p>
    
<p class="- topic/p " xtrc="p:14;94:4" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">The effective value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:11;94:39" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute is constructed using integration
      mechanisms that are specific to each XMLgrammar. Each domain and constraint module <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:5;96:50" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">MUST</term> provide a
      <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:12;97:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt>-attribute value fragment that can be used by DITA document types to
      construct the effective value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:13;98:52" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute. Each structural
      vocabulary module <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:6;99:72" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">SHOULD</term> provide a
        <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:14;100:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt>-attribute value fragment. See <xref class="- topic/xref " format="dita" href="createCustomDocType.dita#createCustomDocType" xtrc="xref:1;101:62" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita" type="concept"><?ditaot gentext?>Configuration (Document type shells)<?ditaot genshortdesc?><desc class="- topic/desc "><ph class="- topic/ph " xtrc="ph:11;64:61" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/common/conref_file.dita">A DITA map or topic is governed by a                                         DITA document type that defines the set of structural                                         modules (topic or map types), domain modules, and constraint                                         modules that the map or topic can use.</ph></desc></xref>.</p>
<example class="- topic/example " id="example" xtrc="example:1;102:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
      <title class="- topic/title " xtrc="title:2;103:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">Example: Task with multiple domains</title>
      <p class="- topic/p " xtrc="p:15;104:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">In this example, the task topic integrates the domains for describing user interfaces
        (ui-d), software (sw-d), and programming (pr-d).</p>
      <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:3;106:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">&lt;task id="mytask" class="- topic/topic task/task " 
	<b class="+ topic/ph hi-d/b " xtrc="b:1;107:5" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains="(topic ui-d) (topic sw-d) (topic pr-d)"&gt;</b>
&lt;!-- ... --&gt;
&lt;/task&gt;</codeblock>
      <p class="- topic/p " xtrc="p:16;110:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">If the document also used a specialization of the programming domain to describe C++
        programming, the new domain would need a separate entry in the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:15;111:80" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt>
        attribute, for example:</p>
      <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:4;113:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">&lt;task id="mytask" class="- topic/topic task/task " 
	domains="(topic ui-d) (topic sw-d) (topic pr-d)<b class="+ topic/ph hi-d/b " xtrc="b:2;114:52" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita"> (topic pr-d cpp-d)</b>"&gt;
...
&lt;/task&gt;</codeblock>
    </example>
    <example class="- topic/example " id="example-dependency" rev="DITA1.3 proposal-13121 review-2" xtrc="example:2;118:76" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">
      <title class="- topic/title " xtrc="title:3;119:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">Example: Dependency on multiple specializations</title>
      <p class="- topic/p " xtrc="p:17;120:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">In this example, a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:5;120:41" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">codeChecklist</xmlelement> specialization specializes from
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:6;121:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">reference</xmlelement> and includes elements from both
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:7;122:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">task</xmlelement> and the programming domain. The domain token for this module
        must declare its own ancestry and dependencies; when this module is used, the
          <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:16;124:19" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute must also include declarations for the domain and
        structural dependencies. For example:</p>
      <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:5;126:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains="...(topic reference checklist++task+pr-d) (topic task) (topic pr-d)"</codeblock>
    </example>
</conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:17;23:41" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/specialize.dita" mapclass="- map/topicref " role="parent" scope="local" type="concept" xtrc="topicref:13;19:38" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Specialization</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">     <ph class="- topic/ph " xtrc="ph:12;68:62" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/common/conref_file.dita">The specialization feature of DITA                                         allows for the creation of new element types and attributes                                         that are explicitly and formally derived from existing                                         types. The resulting specialization allows for the blind                                         interchange of all conforming DITA content and a minimum                                         level of common processing for all DITA content. It also                                         allows specialization-aware processors to add                                         specialization-specific processing to existing base                                         processing. </ph></desc></link></linkpool><linkpool class="- topic/linkpool " xtrc="topicref:14;41:61" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/conref.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/conref-processing.dita" mapclass="- map/topicref " rev="review-2" role="friend" scope="local" type="concept" xtrc="topicref:13;38:61" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/conref.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Processing conrefs</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">When processing content references, DITA processors compare the   restrictions of each context to ensure that the conrefed content is valid in its new   context.</desc></link></linkpool></related-links></concept>