<?xml version="1.0" encoding="UTF-8"?><?workdir /Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base?><?workdir-uri file:/Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base/?><?path2project ../../?><?path2project-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept)                            (topic abbrev-d)                            a(props deliveryTarget)                            (topic equation-d)                            (topic hazard-d)                            (topic hi-d)                            (topic indexing-d)                            (topic markup-d)                            (topic mathml-d)                            (topic pr-d)                            (topic relmgmt-d)                            (topic sw-d)                            (topic svg-d)                            (topic ui-d)                            (topic ut-d)                            (topic markup-d xml-d)   " id="classatt" xml:lang="en-us" xtrc="concept:1;6:20" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">
  <title class="- topic/title " xtrc="title:1;7:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita"><xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;7:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute</title>
  <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;8:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">Each DITA element declares its specialization hierarchy as the value of the
      <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;9:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute. The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;9:53" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute usually provides a
    mapping from the current name of the element to its more general equivalents, but it also can
    provide a mapping from the current name to more specialized equivalents. All
    specialization-aware processing can be defined in terms of <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;12:72" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute
    values without reference to a given element tagname.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;13:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/dita-1.3-specification-base.ditamap">OASIS DITA Technical Committee</author></prolog>
  <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;14:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">
    <section class="- topic/section " xtrc="section:1;15:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">
      <title class="- topic/title " xtrc="title:2;16:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">Specialization hierarchy declaration requirements</title>
      <p class="- topic/p " xtrc="p:1;17:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">Values for the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;17:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:1;17:105" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">MUST</term>
        conform to the following syntax requirements:<ul class="- topic/ul " xtrc="ul:1;18:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">
          <li class="- topic/li " xtrc="li:1;19:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">An initial "-" or "+" character followed by one or more spaces, "-" for element types
            defined in structural vocabulary modules, "+" for element types defined in domain
            modules.</li>
          <li class="- topic/li " xtrc="li:2;22:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">A sequence of one or more module/type pair tokens of the form
              "<varname class="+ topic/keyword sw-d/varname " xtrc="varname:1;23:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">modulename</varname>/<varname class="+ topic/keyword sw-d/varname " xtrc="varname:2;23:55" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">typename</varname>", with each pair of tokens
            separated by one or more spaces, where <varname class="+ topic/keyword sw-d/varname " xtrc="varname:3;24:61" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">modulename</varname> is the short name
            of the vocabulary module and <varname class="+ topic/keyword sw-d/varname " xtrc="varname:4;25:51" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">typename</varname> is the element type name.
            Tokens are ordered left to right from most general to most specialized. </li>
          <li class="- topic/li " xtrc="li:3;27:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">At least one trailing space character (" "). The trailing space ensures that string
            matches on module/name pairs can always include a leading and trailing space in order to
            reliably match full tokens. </li>
        </ul></p>
      <p class="- topic/p " xtrc="p:2;31:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">When the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:6;31:27" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute is declared in an <ph class="- topic/ph " rev="xml-grammars" xtrc="ph:1;31:93" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">XML
          grammar</ph>, it <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:2;32:75" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">MUST</term> be declared
        with a default value. In order to support generalization round-tripping (generalizing
        specialized content into a generic form and then returning it to the specialized form) the
        default value <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:3;35:70" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">MUST NOT</term> be fixed. This
        allows a generalization process to overwrite the default values defined by a general
        document type with specialized values taken from the document being generalized.</p>
      <p class="- topic/p " xtrc="p:3;38:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">When a vocabulary module declares new element types, it <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:4;39:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">MUST</term> provide a <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:7;39:42" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute for each element type that it
        declares. The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:8;40:31" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:5;40:103" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">MUST</term>
        include a mapping for every structural type or domain in the specialized type's ancestry,
        even those in which no element renaming occurred. The mapping <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:6;43:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">MUST</term> start with the value for the base type (for example topic or map), and finish
        with the current element type. </p>
      <p class="- topic/p " xtrc="p:4;45:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">A vocabulary module <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:7;45:77" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">MUST NOT</term> change the
          <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:9;46:19" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute for elements that it does not specialize, but simply
        reuses by reference from more generic levels. For example, if task, bctask, and guitask use
        the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;48:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">p</xmlelement> element without specializing it, they <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:8;49:52" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">MUST NOT</term> declare mappings for it. </p>
      <p class="- topic/p " xtrc="p:5;50:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">Authors <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:9;50:65" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">SHOULD NOT</term> modify the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:10;50:102" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt>
        attribute.</p>
    </section>
    <section class="- topic/section " xtrc="section:2;53:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">
      <title class="- topic/title " xtrc="title:3;54:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">Examples</title>
      <p class="- topic/p " xtrc="p:6;55:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:11;55:22" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute for the task topic type's
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;56:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">step</xmlelement> element
        is:<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:1;57:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">&lt;!ATTLIST step         class  CDATA "- topic/li task/step "&gt;</codeblock></p>
      <p class="- topic/p " xtrc="p:7;58:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">This tells us that the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:3;58:45" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">step</xmlelement> element is equivalent to the
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:4;59:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">li</xmlelement> element in a generic topic. It also tells us that
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:5;60:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">step</xmlelement> is equivalent to a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:6;60:72" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">step</xmlelement> in a task
        topic, which we already knew, but it's worth noting this in the attribute because it enables
        round-trip migration between upper level and lower level types without loss of information. </p>
      <p class="- topic/p " xtrc="p:8;63:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">While a given element's tagname is normally the same as the typename of the last token in
        the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:12;64:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> value, this is not required. Processors that perform
        generalization may transform elements from specialized types to less-specialized types,
        leaving the values of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:13;66:43" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute unchanged (thus preserving
        knowledge of the original most-specialized form). For example, if a user runs a generalizing
        transformation that maps all elements to their first <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:14;68:70" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> value, but
        preserves their content and attribute values, then the user can follow it up with a
        "specialize" transformation that maps all elements to their last <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:15;70:82" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt>
        value (preserving content and attribute values), and provide a full round trip for all
        content between the two document types, using nothing but two generic transformations and
        the information in the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:16;73:40" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute.</p>
      <p class="- topic/p " xtrc="p:9;74:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:17;74:22" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute tells a processor what general classes of elements the
        current element belongs to. DITA scopes elements by module type (for example topic type,
        domain type, or map type) instead of document type, which lets document type developers
        combine multiple topic types in a single document without complicating transformation
        logic.</p>
      <p class="- topic/p " xtrc="p:10;79:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">The sequence of values in the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:18;79:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute is important because it
        tells processors which value is the most general and which is most specific. This is
        especially important for "specializing" transformations, where you can apply a general rule
        that says: if the element doesn't have a mapping to the target topic type, simply use the
        last value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:19;83:35" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute (and assume that the specialized topic
        type is reusing some general element declarations, which only have mappings for the level at
        which they were declared).</p>
      <p class="- topic/p " xtrc="p:11;86:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">
        <fig class="- topic/fig " xtrc="fig:1;87:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">
          <title class="- topic/title " xtrc="title:4;88:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">Example of structural type element with <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:20;88:66" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute</title>
          <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:2;89:22" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">&lt;appstep class="- topic/li task/step bctask/appstep "&gt;
  &lt;cmd class="- topic/ph task/cmd "&gt;A specialized step&lt;/cmd&gt;
&lt;/appstep&gt;</codeblock>
        </fig>
        <fig class="- topic/fig " xtrc="fig:2;93:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">
          <title class="- topic/title " xtrc="title:5;94:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">Example of domain element with <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:21;94:57" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute</title>
          <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:3;95:22" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">&lt;wintitle class="+ topic/keyword ui-d/wintitle "&gt;A specialized keyword&lt;/wintitle&gt;</codeblock>
        </fig>
      </p>
      <p class="- topic/p " xtrc="p:12;98:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">While this example is trivial, more complicated hierarchies (say, five levels deep, with renaming occurring at levels two and four only) make explicit intermediate values essential.</p>
      <p class="- topic/p " xtrc="p:13;99:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">The specialization hierarchy for a given element type must reflect any intermediate modules between the base type and the specialization type, as shown in this example:</p>
      <fig class="- topic/fig " xtrc="fig:3;100:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">
        <title class="- topic/title " xtrc="title:6;101:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">Example of <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:22;101:35" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute with intermediate value</title>
        <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:4;102:20" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">&lt;windowname class="- topic/keyword task/keyword guitask/windowname "&gt;...&lt;/windowname&gt;</codeblock>
      </fig>
      <p class="- topic/p " xtrc="p:14;104:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">The intermediate values are necessary so that generalizing and specializing transformations
        can map values simply and accurately. For example, if task/keyword was missing as a value,
        and a user decided to generalize this guitask up to a task topic, then the transformation
        would have to guess whether to map to keyword (appropriate if task is more general than
        guitask, which it is) or leave it as windowname (appropriate if task were more specialized,
        which it isn't). By always providing mappings for more general values, processors can then
        apply the simple rule that missing mappings must by default be to more specialized values
        than the one we are generalizing to, which means the last value in the list is appropriate.
        For example, when generalizing <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:7;112:52" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">guitask</xmlelement> to
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:8;113:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">task</xmlelement>, if a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:9;113:59" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">p</xmlelement> element has no target value
        for <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:10;114:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">task</xmlelement>, we can safely assume that <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:11;114:82" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">p</xmlelement>
        does not specialize from <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:12;115:46" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">task</xmlelement> and should not be generalized.</p>
    </section>
  </conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:16;22:39" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/specialize.dita" mapclass="- map/topicref " role="parent" scope="local" type="concept" xtrc="topicref:13;19:38" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Specialization</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">     <ph class="- topic/ph " xtrc="ph:12;68:62" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/common/conref_file.dita">The specialization feature of DITA                                         allows for the creation of new element types and attributes                                         that are explicitly and formally derived from existing                                         types. The resulting specialization allows for the blind                                         interchange of all conforming DITA content and a minimum                                         level of common processing for all DITA content. It also                                         allows specialization-aware processors to add                                         specialization-specific processing to existing base                                         processing. </ph></desc></link></linkpool></related-links></concept>