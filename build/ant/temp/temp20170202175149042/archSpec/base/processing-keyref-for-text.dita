<?xml version="1.0" encoding="UTF-8"?><?workdir /Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base?><?workdir-uri file:/Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base/?><?path2project ../../?><?path2project-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept)                            (topic abbrev-d)                            a(props deliveryTarget)                            (topic equation-d)                            (topic hazard-d)                            (topic hi-d)                            (topic indexing-d)                            (topic markup-d)                            (topic mathml-d)                            (topic pr-d)                            (topic relmgmt-d)                            (topic sw-d)                            (topic svg-d)                            (topic ui-d)                            (topic ut-d)                            (topic markup-d xml-d)   " id="processing_key_references" xtrc="concept:1;3:41" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">
    <title class="- topic/title " xtrc="title:1;4:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Processing key references to generate text or link text</title>
    <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;5:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Key references can be used to pull text from the key definition. This topic explains
        how to generate text from a key definition, regardless of whether the key reference also
        results in a link.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;13:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/dita-1.3-specification-base.ditamap">OASIS DITA Technical Committee</author></prolog>
    <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;8:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">
        <note class="- topic/note " xtrc="note:1;9:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">The processing described in this topic is unrelated to the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;9:82" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">conkeyref</xmlatt>
            attribute. In that case <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;10:45" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">conkeyref</xmlatt> is used to determine the target of a
                <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;11:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">conref</xmlatt> attribute, after which the normal <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;11:83" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">conref</xmlatt>
            rules apply.</note>
        <p class="- topic/p " xtrc="p:1;13:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Empty elements that include a key reference with a defined key might get their effective
            content from the key definition. Empty elements are defined as elements that meet the
            following criteria:</p>
        <ul class="- topic/ul " xtrc="ul:1;16:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">
            <li class="- topic/li " xtrc="li:1;17:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Have no text content</li>
            <li class="- topic/li " xtrc="li:2;18:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Have no sub-elements<draft-comment author="robander" class="- topic/draft-comment " disposition="open" time="September 16 2014" translate="no" xtrc="draft-comment:1;19:40" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">There is a recognized edge case that could confuse
                    processors. What if my specialization has a required kid. For validity, I must
                    include that kid. (Same issue tends to come up with conref on something like
                    &lt;step&gt; or &lt;table&gt;). For example, if I have an image with required &lt;alt&gt;
                    child, to be valid it must be: &lt;myImage keyref="a"&gt;&lt;alt/&gt;&lt;/myImage&gt;.
                    This can never be empty, thus can never pull the alt-text along with @href.
                        <p class="- topic/p " xtrc="p:2;25:28" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Not sure what the alternative is though. Originally considered text:
                        "Have no sub-elements that contain text or result in text". But as Chris
                        pointed out this is troublesome - how can a processor know if a child
                        element will result in text? Will &lt;myData/&gt; result in text? What if it
                        results in text for PDF but not HTML - then does my effective content get
                        pulled from the key for one and not the other? What if you have &lt;keyword&gt;
                        child with @conref, but @conref doesn't resolve or pulls nothing? In that
                        case again we have something that may be empty now but resolve later. So,
                        for now using the much simpler "no sub-elements" rule, while recognizing
                        that the edge case exists.</p></draft-comment></li>
            <li class="- topic/li " xtrc="li:3;35:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Have no attributes that would be used as text content (such as <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;35:88" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">alt</xmlatt>
                on the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;36:36" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">image</xmlelement> element)</li>
        </ul>
        <p class="- topic/p " rev="review-2" xtrc="p:3;38:27" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">When an empty element as defined above references a key definition that
            has a child <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;39:37" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement> element, content from that
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:3;40:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement> element is used to determine the effective
            content of the referencing element. Effective content from the key definition becomes
            the element content, with the following exceptions: </p>
        <ul class="- topic/ul " xtrc="ul:2;43:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">
            <li class="- topic/li " xtrc="li:4;44:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">For empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:4;44:39" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">image</xmlelement> elements, effective content is used as
                alternate text, equivalent to creating an <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:5;45:71" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">alt</xmlelement> sub-element
                to hold that content.</li>
            <li class="- topic/li " xtrc="li:5;47:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">For empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:6;47:39" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">link</xmlelement> elements, effective content is used as link
                text, equivalent to creating a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:7;48:60" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> sub-element to hold
                that content.</li>
            <li class="- topic/li " xtrc="li:6;50:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">For empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:8;50:39" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">link</xmlelement> and <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:9;50:73" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">xref</xmlelement> elements,
                a key definition can be used to provide a short description in addition to the
                normal effective content. If the key definition includes
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:10;53:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">shortdesc</xmlelement> inside of <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:11;53:78" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement>,
                that <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:12;54:34" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">shortdesc</xmlelement> should be used to provide effective content
                for a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:13;55:35" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">desc</xmlelement>
                sub-element.</li>
            <li class="- topic/li " xtrc="li:7;57:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">The <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:14;57:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">longdescref</xmlelement> and <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:15;57:74" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">longquoteref</xmlelement>
                elements are empty elements with no effective content. Key definitions are not used
                to set effective text for these elements.</li>
            <li class="- topic/li " xtrc="li:8;60:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">The <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:16;60:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">param</xmlelement> element does not have any effective content, so
                it does not pull any content.</li>
            <li class="- topic/li " xtrc="li:9;62:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">The <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:17;62:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">indextermref</xmlelement> element is not completely defined, so
                determining effective content for this element is also left undefined.</li>
            <li class="- topic/li " product="technicalContent" xtrc="li:10;64:44" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">The <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:18;64:60" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">abbreviated-form</xmlelement> is an empty
                element with special rules that determine effective content.</li>
        </ul>
        <p class="- topic/p " xtrc="p:4;67:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Effective text content is determined using the following set of rules:</p>
        <ol class="- topic/ol " xtrc="ol:1;68:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">
            <li class="- topic/li " product="technicalContent" xtrc="li:11;69:44" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">For the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:19;69:64" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">abbreviated-form</xmlelement>
                element, see the rules described in <xref class="- topic/xref " href="../../langRef/technicalContent/abbreviated-form.dita" xtrc="xref:1;71:82" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita" type="reference"><?ditaot gentext?>abbreviated-form<?ditaot genshortdesc?><desc class="- topic/desc ">The <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/langRef/technicalContent/abbreviated-form.dita" xtrc="xmlelement:2;6:28">abbreviated-form</xmlelement> element represents a reference to a term     that might appear in an abbreviated form (often an acronym). The long and short forms of the     term are generally defined in a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/langRef/technicalContent/abbreviated-form.dita" xtrc="xmlelement:3;8:49">glossentry</xmlelement> topic. Processors should     display the referenced term when rendering an <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/langRef/technicalContent/abbreviated-form.dita" xtrc="xmlelement:4;9:63">abbreviated-form</xmlelement>     element.</desc></xref></li>
            <li class="- topic/li " xtrc="li:12;72:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">If an element does not allow the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:6;72:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">href</xmlatt> attribute, content is taken
                from the first <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:20;73:44" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement> element inside of
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:21;74:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keywords</xmlelement> inside of the
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:22;75:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement>. For example, given the following key
                definition, empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:23;76:47" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement>, <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:24;76:81" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">term</xmlelement>,
                and <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:25;77:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">dt</xmlelement> elements with the attribute
                    <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:1;78:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keyref="nohref"</codeph> would all result in the matching content
                "first":<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:1;79:36" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">&lt;keydef keys="nohref"&gt;
  &lt;topicmeta&gt;
    &lt;keywords&gt;&lt;keyword&gt;first&lt;/keyword&gt;&lt;keyword&gt;second&lt;/keyword&gt;&lt;keyword&gt;third&lt;/keyword&gt;&lt;/keywords&gt;
  &lt;/topicmeta&gt;
&lt;/keydef&gt;</codeblock></li>
            <li class="- topic/li " xtrc="li:13;84:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">For elements that do allow <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:7;84:52" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">href</xmlatt>, elements from within
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:26;85:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement> that are legal within the element using
                    <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:8;86:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keyref</xmlatt> are considered matching text. For example, the
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:27;87:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">xref</xmlelement> element allows <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:9;87:74" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">href</xmlatt>, and also
                allows <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:28;88:36" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement> as a child. Using the code sample from the
                previous item, an empty <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:29;89:53" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">xref</xmlelement> with
                    <codeph class="+ topic/ph pr-d/codeph " xtrc="codeph:2;90:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keyref="test"</codeph> would use all three of these elements as text
                content; after processing, the result would be equivalent
                to:<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:2;92:31" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">&lt;xref keyref="test"&gt;&lt;keyword&gt;first&lt;/keyword&gt;&lt;keyword&gt;second&lt;/keyword&gt;&lt;keyword&gt;third&lt;/keyword&gt;&lt;/xref&gt;</codeblock></li>
            <li class="- topic/li " xtrc="li:14;93:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Otherwise, if <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:30;93:43" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> is specified inside of
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:31;94:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">topicmeta</xmlelement>, the contents of
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:32;95:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> are used as the effective content. <note class="- topic/note " rev="DITA1.3" xtrc="note:2;96:35" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Because all elements that pull text will eventually look for
                    content in the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:33;97:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> element, using
                        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:34;98:37" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> for effective content is a best practice
                    for cases where all elements getting text from a key definition should result in
                    the same value.</note></li>
            <li class="- topic/li " xtrc="li:15;101:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Otherwise, if the element with the key reference results in a link, normal link text
                determination rules apply as they would for <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:35;102:73" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">xref</xmlelement> (for
                example, using the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:36;103:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">navtitle</xmlelement> or falling back to the URI of
                the link target).</li>
        </ol>
        <draft-comment author="robander" class="- topic/draft-comment " disposition="open" time="July 29 2014" translate="no" xtrc="draft-comment:2;106:81" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">I think from close
            review that we should have a rule in here that is specific to elements allowed inside of
            &lt;topicmeta&gt; -- that is, author, source, data, and data-about. If those exist as a
            child of &lt;topicmeta&gt; in the key definition, then they are used to provide the content
            for the same elements with @keyref. I think (but am not sure) that this is the correct
            interpretation of the following line in the DITA 1.2 spec: "When a key definition has a
            &lt;topicmeta&gt; subelement, elements that refer to that key and that are empty may get
            their effective content from the first matching subelement of the &lt;topicmeta&gt;
            subelement of the key-defining topicref." I've left it out until others
            confirm.</draft-comment>
        <p class="- topic/p " xtrc="p:5;116:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">When the effective content for a key reference element results in <ph class="- topic/ph " rev="review-2" xtrc="ph:1;117:18" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">invalid elements, those elements <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:1;117:98" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">SHOULD</term>
                be generalized to produce a valid result.</ph> For example,
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:37;119:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> in the key definition may use a domain
            specialization of <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:38;120:43" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement> that is not valid in the key
            reference context, in which case the specialized element should be generalized to
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:39;122:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement>. If the generalized content is also not valid, a
            text equivalent should be used instead. For example, <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:40;123:78" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement>
            may include <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:41;124:37" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">ph</xmlelement> or a specialized <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:42;124:82" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">ph</xmlelement> in
            the key definition, but neither of those are valid as the effective content for a
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:43;126:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">keyword</xmlelement>. In that case, the text content of the
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:44;127:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">ph</xmlelement> should be used.<draft-comment author="robander" class="- topic/draft-comment " disposition="open" time="29 July 2014" translate="no" xtrc="draft-comment:3;128:56" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">This is a change from DITA 1.2, but one that
                is needed to avoid nonsensical results. The 1.2 language was: "Elements within
                    <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:45;130:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">linktext</xmlelement> that do not match the content model of the key
                reference directly or after generalization should be skipped. " In this case, the
                following key definition would give varying results:<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:3;132:80" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">&lt;keydef keys="ph"&gt;
  &lt;topicmeta&gt;
    &lt;linktext&gt;This is &lt;b&gt;IMPORTANT&lt;/b&gt;&lt;/linktext&gt;
  &lt;/topicmeta&gt;
&lt;/keydef&gt;</codeblock><ul class="- topic/ul " xtrc="ul:3;136:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">
                    <li class="- topic/li " xtrc="li:16;137:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">In contexts where &lt;b&gt; is legal, the effective content would be "This is
                        &lt;b&gt;IMPORTANT&lt;/b&gt;".</li>
                    <li class="- topic/li " xtrc="li:17;139:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">In contexts where &lt;ph&gt; is legal but there is no highlight domain, the
                        effective content would be "This is &lt;ph&gt;IMPORTANT&lt;/ph&gt;"</li>
                    <li class="- topic/li " xtrc="li:18;141:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/processing-keyref-for-text.dita">Problem: in contexts where &lt;ph&gt; is not legal (such as when creating
                        effective text for &lt;keyword&gt;), a strict interpretation of the spec would
                        drop the &lt;b&gt; or &lt;ph&gt; element, and mean the effective content is "This
                        is "</li>
                </ul></draft-comment></p>
        
    </conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:7;11:59" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/key-based-addressing.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/key-based_addressing.dita" mapclass="- map/topicref " role="parent" scope="local" type="concept" xtrc="topicref:1;5:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/key-based-addressing.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Indirect key-based addressing</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">DITA allows references to be made indirectly by referencing a name for a link target,         instead of referencing the location of that target. This name is called a key. The DITA         key<?oxy_insert_start author="Kristen Eberlein" timestamp="20140917T112314-0400"?>-<?oxy_insert_end?><?oxy_delete author="Kristen Eberlein" timestamp="20140917T112313-0400" content=" "?>reference         mechanism provides a layer of abstraction so that resource locations can be defined globally         at the DITA map level instead of locally in each topic.</desc></link></linkpool></related-links></concept>