<?xml version="1.0" encoding="UTF-8"?><?workdir /Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base?><?workdir-uri file:/Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base/?><?path2project ../../?><?path2project-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept)                            (topic abbrev-d)                            a(props deliveryTarget)                            (topic equation-d)                            (topic hazard-d)                            (topic hi-d)                            (topic indexing-d)                            (topic markup-d)                            (topic mathml-d)                            (topic pr-d)                            (topic relmgmt-d)                            (topic sw-d)                            (topic svg-d)                            (topic ui-d)                            (topic ut-d)                            (topic markup-d xml-d)   " id="concept_cmm_rwy_lp" xtrc="concept:1;3:34" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">
 <title class="- topic/title " xtrc="title:1;4:9" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">Example: Duplicate key definitions within a single map</title>
 <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;5:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">A DITA map might contain duplicate key definitions. How processors find the effective
    key definition depends on document order <ph class="- topic/ph " rev="review-2" xtrc="ph:1;6:65" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">and the effect of filtering applied
      to the key definitions.</ph></shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;13:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/dita-1.3-specification-base.ditamap">OASIS DITA Technical Committee</author></prolog>
 <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;8:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">
    <draft-comment author="Kristen Eberlein" class="- topic/draft-comment " time="3 December 2014" translate="no" xtrc="draft-comment:1;9:69" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">
      <p class="- topic/p " xtrc="p:1;10:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">Comment by Eliot Kimber in review #2</p>
      <p class="- topic/p " xtrc="p:2;11:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">Note that the effect of filtering must be the same for a map and set of conditions.</p>
      <p class="- topic/p " xtrc="p:3;12:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">The effective key definition for a key reference is determined at key resolution time using
        the key spaces constructed from the root map. Processors can choose how they construct the
        key spaces:</p>
      <ul class="- topic/ul " xtrc="ul:1;15:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">
        <li class="- topic/li " xtrc="li:1;16:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">They can filter the map and then construct the key space.</li>
        <li class="- topic/li " xtrc="li:2;17:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">They can construct the key space from the unfiltered map, preserving the priority order
          and conditional properties of each key definition. </li>
      </ul>
      <p class="- topic/p " xtrc="p:4;20:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita"> In the first case, using the pre-filtered map, the conditions have already been applied,
        so the key space reflects only the effective key definitions for a specific set of
        conditions. In the second case, using the unfiltered map, the conditions to apply must be
        included as part of the key resolution request. Using those conditions, the processor then
        determines the effective key definition by considering only those key definitions that are
        included by the specified conditions.</p>
      <p class="- topic/p " xtrc="p:5;26:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">In both cases the result will be the same. The first approach, using the pre-filtered map,
        is appropriate for batch processors where the entire process reflects a single set of
        conditions. The second approach, using the unfiltered map, is appropriate for interactive
        processors, such as editors and content management systems, where the user may want to
        quickly see the effect of setting different sets of conditions. </p>
    </draft-comment>
  <p class="- topic/p " xtrc="p:6;32:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">In the following example, a map contains two definitions for the key "load-toner":</p>
  <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:1;33:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">&lt;map&gt;
  &lt;!--... --&gt;
  &lt;keydef keys="load-toner" href="model-1235-load-toner-proc.dita"/&gt;
  &lt;keydef keys="load-toner" href="model-4545-load-toner-proc.dita"
  /&gt;
  &lt;!--... --&gt;
&lt;/map&gt;</codeblock>
  <p class="- topic/p " xtrc="p:7;40:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">In this example, only the first key definition (in document order) of the "load-toner" key is
      effective. All references to the key within the scope of the map resolve to the topic
        <filepath class="+ topic/ph sw-d/filepath " xtrc="filepath:1;42:19" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">model-1235-load-toner-proc.dita</filepath>.</p>
  <p class="- topic/p " xtrc="p:8;43:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">In the following example, a map contains two definitions for the "file-chooser-dialog" key;
   each key definition specifies a different value for the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;44:68" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">platform</xmlatt> attribute.</p>
  <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:2;45:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">&lt;map&gt;
  &lt;!--... --&gt;
  &lt;keydef keys="file-chooser-dialog" href="file-chooser-osx.dita" <b class="+ topic/ph hi-d/b " xtrc="b:1;47:73" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">platform="osx"</b>/&gt;
  &lt;keydef keys="file-chooser-dialog" href="file-chooser-win7.dita" <b class="+ topic/ph hi-d/b " xtrc="b:2;48:74" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">platform="windows7"</b>/&gt;
  &lt;!--... --&gt;
&lt;/map&gt;</codeblock>
  <p class="- topic/p " xtrc="p:9;51:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">In this case, the effective key definition is determined not only by the order in which the
      definitions occur, but also by whether the active value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;52:78" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">platform</xmlatt>
      attribute is "osx" or "windows7". Both key definitions are <i class="+ topic/ph hi-d/i " xtrc="i:1;53:69" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">potentially</i> effective
      because they have distinct values for the conditional attribute. Note that if no active value
      is specified for the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;55:36" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">platform</xmlatt> attribute at processing time, then both of the
      key definitions are present and so the first one in document order is the effective
      definition. </p>
  <p class="- topic/p " xtrc="p:10;58:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">If the DITAVAL settings are defined so that both "osx" and "windows" values for the
        <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;59:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">platform</xmlatt> attribute are excluded, then neither definition is effective and
      the key is undefined. That case can be avoided by specifying an unconditional key definition
      after any conditional key definitions, for
      example:<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:3;62:26" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">&lt;map&gt;
  &lt;!--... --&gt;
  &lt;keydef keys="file-chooser-dialog" href="file-chooser-osx.dita" platform="osx"/&gt;
  &lt;keydef keys="file-chooser-dialog" href="file-chooser-win7.dita" platform="windows7"/&gt;
  <b class="+ topic/ph hi-d/b " xtrc="b:3;66:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">&lt;keydef keys="file-chooser-dialog" href="file-chooser-generic.dita"/&gt;</b>
  &lt;!--... --&gt;
&lt;/map&gt;</codeblock></p>
  <p class="- topic/p " xtrc="p:11;69:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">If the above map is processed with both "osx" and "windows" values for the
        <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;70:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">platform</xmlatt> attribute excluded, then the effective key definition for
      "file-chooser-dialog" is the <filepath class="+ topic/ph sw-d/filepath " xtrc="filepath:2;71:46" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions.dita">file-chooser-generic.dita</filepath> resource.</p>
 </conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:5;9:74" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/examples-keys.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/examples_of_keys.dita" mapclass="- map/topicref " role="parent" scope="local" type="concept" xtrc="topicref:1;5:68" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/examples-keys.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Examples of keys</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">This section of the specification contains examples and scenarios. They illustrate a         wide variety of ways that keys can be used.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/example-scoped-keys-for-variable-text.dita" mapclass="- map/topicref " role="previous" scope="local" type="concept" xtrc="topicref:4;8:64" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/examples-keys.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Example: Scoped key definitions for variable text</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Scoped key definition can be used for variable text. This enables you to use the same   DITA topic multiple times in a DITA map, and in each instance the variable text can resolve   differently.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/example-resolution-of-duplicate-key-definitions-multiple-maps.dita" mapclass="- map/topicref " role="next" scope="local" type="concept" xtrc="topicref:6;10:88" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/examples-keys.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Example: Duplicate key definitions across multiple maps</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">A root map might reference submaps, each of which might contain duplicate key   definitions. Which key definition is effective depends on the document order  <ph class="- topic/ph " rev="review-2" xtrc="ph:1;7:5" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/example-resolution-of-duplicate-key-definitions-multiple-maps.dita">of the direct URI references to the maps.</ph></desc></link></linkpool></related-links></concept>