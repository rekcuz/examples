<?xml version="1.0" encoding="UTF-8"?><?workdir /Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base?><?workdir-uri file:/Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base/?><?path2project ../../?><?path2project-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept)                            (topic abbrev-d)                            a(props deliveryTarget)                            (topic equation-d)                            (topic hazard-d)                            (topic hi-d)                            (topic indexing-d)                            (topic markup-d)                            (topic mathml-d)                            (topic pr-d)                            (topic relmgmt-d)                            (topic sw-d)                            (topic svg-d)                            (topic ui-d)                            (topic ut-d)                            (topic markup-d xml-d)   " id="links-between-maps" rev="DITA1.3 proposal-13041" xtrc="concept:1;3:63" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">
 <title class="- topic/title " xtrc="title:1;4:9" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">Links between maps</title>
 <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;5:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">When using scoped keys, one map can refer to keys defined in a different root map,
        creating peer map-to-map links. These map-to-map links enable the production of deliverables
        with working links to other deliverables (cross-deliverable links).</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;13:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/dita-1.3-specification-base.ditamap">OASIS DITA Technical Committee</author></prolog>
 <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;8:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">
        <draft-comment author="Kristen Eberlein" class="- topic/draft-comment " disposition="open" time="5 October 2014" translate="no" xtrc="draft-comment:1;9:91" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">
            <p class="- topic/p " xtrc="p:1;10:16" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">I suspect that this content needs to be reworked to conform to the new key
                terminology and the coverage of keys in the "Indirect key-based addressing"
                section."</p>
        </draft-comment>
        
  <p class="- topic/p " xtrc="p:2;15:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">When a key scope is defined on a topic reference to a DITA map and the value of
                <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;16:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">scope</xmlatt> is set to "peer", then the referenced map is a <term class="- topic/term " xtrc="term:1;16:93" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">peer
                map</term> to the referencing map. The implications are that the two maps are
      managed in tandem, and that the author of the referencing map <ph class="- topic/ph " rev="review-2" xtrc="ph:1;18:88" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">might have access</ph> to the
            referenced map.</p>
  <p class="- topic/p " xtrc="p:3;20:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">The keys that are defined by the peer map belong to the key scope that is declared on the
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;21:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">topicref</xmlelement> element that references that map. Such keys can be
            referenced from content in the referencing map by using standard scope-qualified key
            names. However, processors handle references to keys defined in peer maps differently
            from how they handle references to keys that are defined in the local map structure.</p>


  <p class="- topic/p " xtrc="p:4;39:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">For example, given the map documents <filepath class="+ topic/ph sw-d/filepath " xtrc="filepath:1;39:53" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">map-a.ditamap</filepath> and
                <filepath class="+ topic/ph sw-d/filepath " xtrc="filepath:2;40:27" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">map-b.ditamap</filepath>, Map A can treat Map B as a peer  map
            using the key definition:</p>
  <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:1;42:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">&lt;map&gt;&lt;title&gt;Map A&lt;/title&gt;
  &lt;topicref 
    scope="peer"
    format="ditamap"
    keyscope="map-b"
    href="../map-b/map-b.ditamap"
    processing-role="resource-only"
  /&gt;
  &lt;!-- ... --&gt;
&lt;/map&gt;</codeblock>
  <p class="- topic/p " xtrc="p:5;52:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">In this example, <filepath class="+ topic/ph sw-d/filepath " xtrc="filepath:3;52:33" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">map-b.ditamap</filepath> is not a submap of Map A; it is a peer
      map.</p>

  <p class="- topic/p " xtrc="p:6;55:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">Conforming DITA processors are not required to support the resolution of or delivery of key
            references to peer maps. <draft-comment author="robander" class="- topic/draft-comment " time="March 9 2015" translate="no" xtrc="draft-comment:2;56:91" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">"...or
                delivery of..." what is meant by "delivery of key references to peer
                maps"?</draft-comment>Note, however, that the general implication of peer scope is
            that the peer resources are all available in the same processing or management context.
            This means that processors always have the potential to resolve peer key references when
            the peer resources are in fact managed together. There may, of course, be performance,
            scale, and user interface challenges in implementing such systems, but the fundamental
            ability to resolve any given reference is ensured when the source files are physically
            accessible. That is, given a correctly-specified reference to a peer map, if the map
            itself is accessible, it must then be possible to process that map in order to resolve
            keys defined by it, if it is also possible to resolve keys in the map making the peer
            map reference.</p>
  <p class="- topic/p " xtrc="p:7;68:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">Note also the inverse implication: if the peer resource is not available, then it is impossible
      to resolve the key reference. For that reason, processors should provide appropriate messages
      when a peer resource cannot be resolved. Depending on how a set of DITA resources is authored,
      managed, and processed, peer resources may be resolvable or not at different points in the
      content life cycle.</p>
  <p class="- topic/p " xtrc="p:8;73:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">The referenced peer map may specify <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;73:50" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">keyscope</xmlatt> on its root element. In that case, the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;73:115" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">keyscope</xmlatt>
   on the peer map is ignored for the purpose of resolving scoped key references from the
   referencing map. This avoids the need for processors to have access to or examine the peer map
   before being able to determine that a given key reference is or is not in a peer scope.</p>
  <p class="- topic/p " xtrc="p:9;77:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">For example, given this map reference in map Map A:</p>
  <codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:2;78:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">&lt;mapref 
  keyscope="scope-b"
  scope="peer"  
  href="map-b.ditamap"
/&gt; </codeblock>
  <p class="- topic/p " xtrc="p:10;83:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">Where <filepath class="+ topic/ph sw-d/filepath " xtrc="filepath:4;83:22" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">map-b.ditamap</filepath>
            is:<codeblock class="+ topic/pre pr-d/codeblock " xml:space="preserve" xtrc="codeblock:3;84:27" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">&lt;map keyscope="scopeB"&gt;
 &lt;!-- ... --&gt;
&lt;/map&gt;</codeblock></p>
  <p class="- topic/p " xtrc="p:11;87:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">For references from the context of Map A, key references of the form "scope-b.somekey" will be
            resolved to keys defined in the global scope of map B, but key references of the form
            "scopeB.somekey" will not. The presence or absence of a <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;89:77" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">keyscope</xmlatt>
            attribute on Map B's <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;90:46" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">map</xmlelement> element has no effect in this case.
            Another way to view this is that a key reference to the scope "scope-b.somekey" is
            equivalent to the unscoped reference "somekey" processed in the context of Map B as the
            root map. In both cases, the presence of <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;93:62" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">keyscope</xmlatt> on Map B's
                <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:3;94:29" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">map</xmlelement> element has no effect, in the first case (peer key
            reference) because it is explicitly ignored, in the second because the key reference
            will necessarily be within the scope "scope-b" and therefore does not need to be scope
                qualified.<draft-comment author="robander" class="- topic/draft-comment " time="March 9 2015" translate="no" xtrc="draft-comment:3;97:80" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">I think the previous
                sentence should end -- "necessarily be within the scope "scopeB" and therefore..."
                -- but I'm not sure. Aren't we comparing to the context of Map B, in which case
                we're talking about "scopeB" as defined on Map B?</draft-comment></p>
  <p class="- topic/p " xtrc="p:12;101:6" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">For local-scope map references, the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:6;101:50" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">keyscope</xmlatt> attribute values on the map
            reference and the map element are merged, meaning that both the scopes named on the map
            reference and on the map will be resolvable for key references processed in the context
            of the referencing parent root map. The referenced map does not create another level of
            scope hierarchy when referenced as a sub map.<note class="- topic/note " xtrc="note:1;105:64" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/links-between-maps.dita">This rule ensures that the same key
                reference (for example, "scope-b.somekey") will resolve to the same resource whether
                the referenced map is referenced as a local map (submap) or a peer map.</note></p>
        
 </conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:5;9:74" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/linking.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/ditalinking.dita" mapclass="- map/topicref " role="parent" scope="local" type="concept" xtrc="topicref:1;5:36" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/linking.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>DITA linking</linktext><?ditaot genshortdesc?><desc class="- topic/desc "><ph class="- topic/ph " xtrc="ph:5;40:55" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/common/conref_file.dita">DITA depends heavily on links. The purposes                                         for which it provides links include defining the content and                                         organization of publication structures (DITA maps),                                         topic-to-topic navigation links and cross references, and                                         reuse of content by reference. All DITA links use the same                                         addressing mechanisms, either URI-based addresses or                                         indirect addresses using keys and key references.</ph></desc></link></linkpool></related-links></concept>