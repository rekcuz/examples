<?xml version="1.0" encoding="UTF-8"?><?workdir /Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base?><?workdir-uri file:/Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base/?><?path2project ../../?><?path2project-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept)                            (topic abbrev-d)                            a(props deliveryTarget)                            (topic equation-d)                            (topic hazard-d)                            (topic hi-d)                            (topic indexing-d)                            (topic markup-d)                            (topic mathml-d)                            (topic pr-d)                            (topic relmgmt-d)                            (topic sw-d)                            (topic svg-d)                            (topic ui-d)                            (topic ut-d)                            (topic markup-d xml-d)   " id="specvalid" xml:lang="en-us" xtrc="concept:1;4:35" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">
  <title class="- topic/title " xtrc="title:1;5:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">Requirements for specialized element types and attributes</title>
  <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;6:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">When you specialize one element from another, or a new attribute from
      <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;7:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">props</xmlatt> or <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;7:41" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">base</xmlatt>, the new element or attribute <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:1;8:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST</term> obey certain rules in order to be a conforming
    specialization.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;13:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/dita-1.3-specification-base.ditamap">OASIS DITA Technical Committee</author></prolog>
  <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;10:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">
    <p class="- topic/p " xtrc="p:1;11:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">A specialized element:</p>
    <ul audience="" class="- topic/ul " xtrc="ul:1;12:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">
      <li class="- topic/li " xtrc="li:1;13:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita"><term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:2;13:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST</term> have a properly-formed
          <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;14:19" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">class</xmlatt> attribute specifying inheritance from its parent.</li>
      <li class="- topic/li " xtrc="li:2;15:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita"><term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:3;15:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST NOT</term> have a more inclusive
        content model than its parent has.</li>
      <li class="- topic/li " xtrc="li:3;17:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita"><term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:4;17:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST NOT</term> have attributes that its
        parent lacks.</li>
      <li class="- topic/li " xtrc="li:4;19:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita"><term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:5;19:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST NOT</term> have values or value ranges
        of these attributes that are more extensive than those in the parent.</li>
    </ul>
    <p class="- topic/p " xtrc="p:2;22:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">An attribute specialized from the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;22:50" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">props</xmlatt> or <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;22:76" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">base</xmlatt>
      attribute:</p>
    <ul class="- topic/ul " xtrc="ul:2;24:9" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">
      <li class="- topic/li " xtrc="li:5;25:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita"><term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:6;25:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST</term> follow the rules for attribute domain
        specialization.</li>
      <li class="- topic/li " xtrc="li:6;27:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita"><term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:7;27:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST NOT</term> have values or value ranges that are more
        extensive than those of the parent.</li>
      <li class="- topic/li " xtrc="li:7;29:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita"><term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:8;29:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST</term> conform to the rules for conditional
        processing values, that is, alphanumeric space-delimited values. In generalized form, the
        values <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:9;31:63" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST</term> conform to the rules for attribute
        generalization.</li>
      <li class="- topic/li " xtrc="li:8;33:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita"><term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:10;33:58" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST</term> be declared as a global attribute. Attribute
        specializations cannot be limited to specific element types.</li>
    </ul>
    <p class="- topic/p " xtrc="p:3;36:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">DITA elements are never in a namespace. Only the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:6;36:65" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">DITAArchVersion</xmlatt> attribute
      is in a DITA-defined namespace. All other attributes, except for those defined by the XML
      standard, are in no namespace.</p>
    <p class="- topic/p " xtrc="p:4;39:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">This limitation is imposed by the details of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:7;39:65" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">class</xmlatt> attribute syntax,
      which makes it impractical to have namespace-qualified names for either vocabulary modules or
      individual element types or attributes. Elements included as descendants of the DITA
        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;42:21" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">foreign</xmlelement> element type may be in any namespace.<note class="- topic/note " xtrc="note:1;42:85" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">For this reason,
        designers of domain modules that are intended for wide use should take care to define
        element type and attribute names that are unlikely to conflict with names used in other
        domains, for example, by using a domain-specific prefix on all names.</note></p>
    <draft-comment author="Kristen Eberlein" class="- topic/draft-comment " time="21 February 2015" translate="no" xtrc="draft-comment:1;46:70" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">
      <p class="- topic/p " xtrc="p:5;47:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">The following content relocated from the "DTD: Coding requirements for element type
        declarations" topic:</p>
      <p class="- topic/p " xtrc="p:6;49:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">The attributes of an element type <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:11;50:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST</term> restrict or conserve those of the element type it specializes. Specialized
        element types may not add new attributes. New global attributes may be defined via attribute
        domain modules. Structural modules might require the use of attribute domain modules.</p>
    </draft-comment>
  </conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:15;21:40" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/specialize.dita" mapclass="- map/topicref " role="parent" scope="local" type="concept" xtrc="topicref:13;19:38" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Specialization</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">     <ph class="- topic/ph " xtrc="ph:12;68:62" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/common/conref_file.dita">The specialization feature of DITA                                         allows for the creation of new element types and attributes                                         that are explicitly and formally derived from existing                                         types. The resulting specialization allows for the blind                                         interchange of all conforming DITA content and a minimum                                         level of common processing for all DITA content. It also                                         allows specialization-aware processors to add                                         specialization-specific processing to existing base                                         processing. </ph></desc></link></linkpool></related-links></concept>