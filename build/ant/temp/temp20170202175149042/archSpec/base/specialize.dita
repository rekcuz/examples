<?xml version="1.0" encoding="UTF-8"?><?workdir /Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base?><?workdir-uri file:/Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base/?><?path2project ../../?><?path2project-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept)                            (topic abbrev-d)                            a(props deliveryTarget)                            (topic equation-d)                            (topic hazard-d)                            (topic hi-d)                            (topic indexing-d)                            (topic markup-d)                            (topic mathml-d)                            (topic pr-d)                            (topic relmgmt-d)                            (topic sw-d)                            (topic svg-d)                            (topic ui-d)                            (topic ut-d)                            (topic markup-d xml-d)   " id="specialize" xml:lang="en-us" xtrc="concept:1;5:36" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">
  <title class="- topic/title " xtrc="title:1;6:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Specialization</title>
  <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;7:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">
    <ph class="- topic/ph " xtrc="ph:12;68:62" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/common/conref_file.dita">The specialization feature of DITA
                                        allows for the creation of new element types and attributes
                                        that are explicitly and formally derived from existing
                                        types. The resulting specialization allows for the blind
                                        interchange of all conforming DITA content and a minimum
                                        level of common processing for all DITA content. It also
                                        allows specialization-aware processors to add
                                        specialization-specific processing to existing base
                                        processing. </ph></shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;13:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/dita-1.3-specification-base.ditamap">OASIS DITA Technical Committee</author></prolog>
  <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;9:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">
    <section class="- topic/section " xtrc="section:1;10:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">
      <title class="- topic/title " xtrc="title:2;11:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Specializations are explicitly declared in documents</title>
      <p class="- topic/p " xtrc="p:1;12:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">The specialization feature of DITA defines both a specialization hierarchy declaration
        syntax used in document instances and a set of document type implementation requirements.
        The specialization declarations allow processors to determine what set of specializations
        and associated local constraints a given DITA document uses. The specialization declarations
        for individual elements and attributes allow processors to determine what the type
        hierarchies of those elements and attributes are, from which processors can determine the
        most appropriate (or available) processing to apply. </p>
    </section>
    <section class="- topic/section " xtrc="section:2;20:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">
      <title class="- topic/title " xtrc="title:3;21:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Specialization enables controlled extension</title>
      <p class="- topic/p " xtrc="p:2;22:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Specialization allows you to define new kinds of information (new structural types or new
        domains of information), while reusing as much of existing design and code as possible, and
        minimizing or eliminating the costs of interchange, migration, and maintenance. </p>
      <p class="- topic/p " xtrc="p:3;25:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">In traditional XML applications, all semantics for a given element instance are bound to
        the element type, such as <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;26:47" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">para</xmlelement> for a paragraph or
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;27:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">title</xmlelement> for a title. The XML specification provides no built-in
        mechanism for relating two element types to say "element type B is a subtype of element type
        A". However, in most documentation-focused XML applications there is often a clear hierarchy
        of types. For example, in a technical manual, there might be generic sections and more
        specialized sections, e.g. "Troubleshooting" or "Assembly Procedures". The presentation of
        the generic and specialized sections might be identical, but the more specialized sections
        might have more restrictive <ph class="- topic/ph " rev="review-2" xtrc="ph:2;33:56" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">content models</ph> or include additional
        element types relevant only to those section types. While these relationships might be
        understood by authors and system implementors, the XML standard provides no direct way to
        express the relationship, to say explicitly "A Troubleshooting section is a generic section
        and must conform to all requirements of generic sections". Having created the element type
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:3;38:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">section</xmlelement> and implemented presentation processing for it and then
        having later created the element type <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:4;39:59" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">troubleshooting</xmlelement>, there is no
        obvious mechanism for having all <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:5;40:54" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">troubleshooting</xmlelement> elements
          <i class="+ topic/ph hi-d/i " xtrc="i:1;41:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">automatically</i> get the processing associated with <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:6;41:79" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">section</xmlelement>
        elements. To get that behavior someone has to explicitly update all processors involved to
        apply <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:7;43:27" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">section</xmlelement> processing to
          <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:8;44:23" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">troubleshooting</xmlelement>.</p>
      <p class="- topic/p " xtrc="p:4;45:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">The DITA specialization feature provides a standard mechanism for saying explicitly, using
        normal XML syntax, "A Troubleshooting section is a generic section and must conform to all
        requirements of generic sections" and, having said that, makes it possible for generic
        section processing to be applied to troubleshooting sections <i class="+ topic/ph hi-d/i " xtrc="i:2;48:73" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">with no further
        effort</i>.</p>
    </section>
    <section class="- topic/section " xtrc="section:3;51:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">
      <title class="- topic/title " xtrc="title:4;52:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">When to use or not use specialization</title>
      <p class="- topic/p " xtrc="p:5;53:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Specialization is used when new structural types or new domains are needed. DITA
        specialization can be used when you want to make changes to your design for the sake of
        increased consistency or descriptiveness or have specific needs for output that cannot be
        addressed using the current data model. Specialization is not normally used for simply
        creating different output
        types, as DITA documents may be transformed to different outputs.</p>
      <p class="- topic/p " xtrc="p:6;59:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Do not use specialization to simply eliminate unneeded or unwanted element types from
        specific content models. The content models for element types defined in vocabulary modules
        can be configured using separately-defined constraint modules without the need to create new
        specializations. See <xref class="- topic/xref " format="dita" href="createConstraintsDomainSpec.dita" xtrc="xref:1;62:91" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita" type="concept"><?ditaot gentext?>Constraints<?ditaot genshortdesc?><desc class="- topic/desc "><ph class="- topic/ph " xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/common/conref_file.dita" xtrc="ph:13;77:58">Constraint modules define additional                                         constraints for vocabulary modules in order to restrict                                         content models or attribute lists for specific element                                         types, remove certain extension elements from an integrated                                         domain module, or replace base element types with                                         domain-provided, extension element types.</ph></desc></xref>.</p>
      <p class="- topic/p " xtrc="p:7;63:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Use specialization when you are dealing with new semantics (new, meaningful categories of
        information, either in the form of new structural types or new domains). The new semantics
        can be encoded as part of a specialization hierarchy, that allows them to be processed by
        existing specialization-aware transforms or transformed back to more general equivalents
        ("generalization") for processing by transforms that only understand the unspecialized base
        types. Use <ph class="- topic/ph " rev="review-2" xtrc="ph:3;68:39" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">constraint modules</ph> to configure content models and
        attribute lists without changing semantics.</p>
    </section>
    <section class="- topic/section " xtrc="section:4;71:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">
      <title class="- topic/title " xtrc="title:5;72:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Types of specialization hierarchy</title>
      <p class="- topic/p " xtrc="p:8;73:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">There are two kinds of specialization hierarchy: one for structural types (with topic or
        map at the root) and one for domains (with elements in topic or map at their root, or the
        <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;75:17" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">props</xmlatt> or <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;75:43" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">base</xmlatt> attributes). Structural types define topic or map structures, such as
        concept or task or reference, which often apply across subject areas (for example, a user
        interface task and a programming task may both consist of a series of steps). Domains define
        markup for a particular information domain or subject area, such as programming, or
        hardware. Each type of vocabulary module represents an “is a” hierarchy, in object-oriented
        terms, with each structural type or domain being a subclass of its parent. For example, a
        specialization of task is still a task and a specialization of the user interface domain is
        still part of the user interface domain. A given domain can be used with any map or topic
        type, as appropriate for the domain. In addition, specific structural types <term class="- topic/term " xtrc="term:1;83:91" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">may</term>
        require the use of specific domains.</p>
    </section>
    <section class="- topic/section " xtrc="section:5;87:8" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">
      <title class="- topic/title " xtrc="title:6;88:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Specialization of attributes</title>
      <p class="- topic/p " xtrc="p:9;89:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">With structural specializations you can limit the allowed values of attributes defined on the base types of specialized types. You can also define new attributes through domain specializations based off of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;89:228" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">props</xmlatt> attribute (for conditional processing) or the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;89:297" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">base</xmlatt> attribute (for other simple token attributes).</p>
      <note class="- topic/note " othertype="non-normative" type="other" xtrc="note:1;92:35" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">As a general practice, structural specializations should not limit the values of the built-in selection attributes. Use constraint modules to define specific value lists for built-in selection attributes.</note>
      <p class="- topic/p " xtrc="p:10;93:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Attribute specialization allows you to define new conditional processing attributes that can be used for filtering and flagging (specializations of <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:5;93:166" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">props</xmlatt>) or new attributes with no existing equivalent that can be managed and generalized in the same way as conditional processing attributes (specializations of <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:6;93:345" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">base</xmlatt>). </p>
      <p class="- topic/p " xtrc="p:11;94:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">New attributes need to be specialized from either <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:7;94:68" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">props</xmlatt> or <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:8;94:94" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">base:</xmlatt><ul class="- topic/ul " id="ul_30446824-c5c6-4d26-813d-0ce71667c3e8" xtrc="ul:1;95:54" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">
        <li class="- topic/li " xtrc="li:1;96:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Attributes specialized from <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:9;96:49" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">props</xmlatt> are recognized as conditional processing attributes</li>
        <li class="- topic/li " xtrc="li:2;97:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Attributes specialized from <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:10;97:49" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">base</xmlatt> have no existing behavior associated with them</li>
        <li class="- topic/li " xtrc="li:3;98:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">Values in specialized attributes should be preserved during generalization and respecialization as for <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:11;98:124" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">props</xmlatt></li>
        <li class="- topic/li " xtrc="li:4;99:13" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialize.dita">While generalized, the attribute values should still be understandable by both general and specialized behaviors, and be treated as equivalent to their specialized form. For example, conditional filtering should work the same way on specialized attributes and on generalized attributes.</li>
        </ul></p>
    </section>
  </conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:13;19:38" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/configuration-specialization-and-constraints.dita" mapclass="- map/topicref " role="parent" scope="local" type="concept" xtrc="topicref:1;5:70" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Configuration, specialization, and constraints</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">The extension facilities of DITA allow existing vocabulary and     constraint modules to be combined to create specific DITA document types. Vocabulary modules     also can be specialized to meet requirements that are not satisfied by existing markup. </desc></link><linkpool class="- topic/linkpool " xtrc="topicref:13;19:38" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/vocabularymodules.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:14;20:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Vocabulary modules</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Vocabulary modules are units of XML vocabulary definition. A DITA element type or     attribute is declared in exactly one vocabulary module.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/specvalid.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:15;21:40" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Requirements for specialized element types and attributes</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">When you specialize one element from another, or a new attribute from       <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;7:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">props</xmlatt> or <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;7:41" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">base</xmlatt>, the new element or attribute <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:1;8:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specvalid.dita">MUST</term> obey certain rules in order to be a conforming     specialization.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/classatt.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:16;22:39" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>class attribute</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Each DITA element declares its specialization hierarchy as the value of the       <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;9:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute. The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;9:53" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute usually provides a     mapping from the current name of the element to its more general equivalents, but it also can     provide a mapping from the current name to more specialized equivalents. All     specialization-aware processing can be defined in terms of <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:4;12:72" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/classatt.dita">class</xmlatt> attribute     values without reference to a given element tagname.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/domainsatt.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:17;23:41" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>domains attribute</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Structural types <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:1;7:25" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">MUST</term> declare the domain vocabulary modules and constraint modules     that they use, as well as any dependencies that they have on elements from other (non-ancestor)     structural modules. This is done using a <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;9:54" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute value that is a     sequence of parenthesized module ancestry specifications. The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:3;10:75" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">domains</xmlatt> attribute     is declared on the root element for each topic or map type. Structural modules <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:2;12:48" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">SHOULD</term> declare their structural ancestry, and     structural modules <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:3;13:71" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/domainsatt.dita">MUST</term> do so when they     have dependencies on structural modules other than their ancestors.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/generalize.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:18;25:41" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Generalization</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Specialized content can be generalized to any ancestor type. The generalization process     can preserve information about the former level of specialization to allow round-tripping     between specialized and unspecialized forms of the same content.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/generalization-w-cross-specialization-dependencies.dita" mapclass="- map/topicref " rev="DITA1.3 proposal-13121" role="child" scope="local" type="concept" xtrc="topicref:19;27:39" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Generalization with cross-specialization dependencies</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Dependencies across specializations limit generalization targets to those that either   preserve the dependency or eliminate them. Some generalization targets will not be valid and   should be detected before generalization occurs.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/sharing-elements-across-modules.dita" mapclass="- map/topicref " rev="DITA1.3 proposal-13121" role="child" scope="local" type="concept" xtrc="topicref:20;28:91" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Sharing elements across specializations</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">The process of specialization enables easy reuse of elements from ancestor     specializations; however, it is also possible to reuse elements from non-ancestor     specializations, as long as the dependency is properly declared to prevent invalid     generalization or conref processing.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/attributegeneralize.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:21;29:50" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Attribute generalization</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">DITA provides a syntax to generalize attributes that have been specialized from the       <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:1;6:15" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/attributegeneralize.dita">props</xmlatt> or <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrc="xmlatt:2;6:41" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/attributegeneralize.dita">base</xmlatt> attribute. Specialization-aware processors       <term class="- topic/term " outputclass="RFC-2119" rev="terminology" xtrc="term:1;7:54" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/attributegeneralize.dita">SHOULD</term> process both the specialized and     generalized forms of an attribute as equivalent in their values.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/foreigncontentspec.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:22;30:49" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Specializing foreign or unknown content</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">Specializing the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:1;5:43" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/foreigncontentspec.dita">foreign</xmlelement> or <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrc="xmlelement:2;5:79" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/foreigncontentspec.dita">unknown</xmlelement>     element is an open extension to DITA for the purpose of incorporating standard vocabularies for     non-textual content, such as MathML and SVG, <ph class="- topic/ph " rev="DITA1.3 proposal-13119" xtrc="ph:1;7:83" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/foreigncontentspec.dita">as markup within       DITA documents.</ph> These elements should not be used to include textual content or metadata     in DITA documents, except where such content acts as an example or display, rather than as the     primary content of a topic.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/specialization_module_requirements.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:1;5:59" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Coding requirements for specialization modules</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">The base DITA element and attribute types may be extended through the creation of new vocabulary modules that define specializations of more-general types.</desc></link></linkpool></linkpool></related-links></concept>