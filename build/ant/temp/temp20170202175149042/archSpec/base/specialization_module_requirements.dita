<?xml version="1.0" encoding="UTF-8"?><?workdir /Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base?><?workdir-uri file:/Users/joe.zucker/git/examples/build/ant/temp/temp20170202175149042/archSpec/base/?><?path2project ../../?><?path2project-uri ../../?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" class="- topic/topic concept/concept " ditaarch:DITAArchVersion="1.3" domains="(topic concept)                            (topic abbrev-d)                            a(props deliveryTarget)                            (topic equation-d)                            (topic hazard-d)                            (topic hi-d)                            (topic indexing-d)                            (topic markup-d)                            (topic mathml-d)                            (topic pr-d)                            (topic relmgmt-d)                            (topic sw-d)                            (topic svg-d)                            (topic ui-d)                            (topic ut-d)                            (topic markup-d xml-d)   " id="specialization_module_requirements" xml:lang="en-us" xtrc="concept:1;6:20" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization_module_requirements.dita">
  <title class="- topic/title " xtrc="title:1;7:10" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization_module_requirements.dita">Coding requirements for specialization modules</title>
  <shortdesc class="- topic/shortdesc " xtrc="shortdesc:1;8:14" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization_module_requirements.dita">The base DITA element and attribute types may be extended through the creation of new vocabulary modules that define specializations of more-general types.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1;13:11" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/dita-1.3-specification-base.ditamap">OASIS DITA Technical Committee</author></prolog>
  <conbody class="- topic/body  concept/conbody " xtrc="conbody:1;9:12" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization_module_requirements.dita">
    <draft-comment author="robander" class="- topic/draft-comment " time="16 February 2015" translate="no" xtrc="draft-comment:1;10:62" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization_module_requirements.dita">Should make sure the shortdescs for
      nested topics are consistent. 2 use "implementation (coding) requirements" and one uses
      "coding requirements". Also, I don't think this ensures backwards compatibility, at least with
      regards to non-OASIS specializations, or am I missing something?</draft-comment>
  </conbody>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrc="topicref:1;5:59" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/specialize.dita" mapclass="- map/topicref " role="parent" scope="local" type="concept" xtrc="topicref:13;19:38" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization-and-custom-doctypes.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>Specialization</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">     <ph class="- topic/ph " xtrc="ph:12;68:62" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/common/conref_file.dita">The specialization feature of DITA                                         allows for the creation of new element types and attributes                                         that are explicitly and formally derived from existing                                         types. The resulting specialization allows for the blind                                         interchange of all conforming DITA content and a minimum                                         level of common processing for all DITA content. It also                                         allows specialization-aware processors to add                                         specialization-specific processing to existing base                                         processing. </ph></desc></link><linkpool class="- topic/linkpool " xtrc="topicref:1;5:59" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization.ditamap"><link class="- topic/link " format="dita" href="../../archSpec/base/dtdmod.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:2;6:32" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>DTD: Coding requirements for specialization modules</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">To be extensible and backward compatible, DITA requires that a DTD implementation of     structural and domain specialization modules conform to well-defined implementation (coding)     requirements.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/schemamod.dita" mapclass="- map/topicref " role="child" scope="local" type="concept" xtrc="topicref:8;13:35" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>XML Schema: Coding requirements for specialization modules</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">To be extensible and backward compatible, DITA requires that an XSD implementation of     structural and domain specialization modules conform to well-defined implementation (coding)     requirements.</desc></link><link class="- topic/link " format="dita" href="../../archSpec/base/coding-requirements-relax-ng.dita" mapclass="- map/topicref " rev="DITA1.3 proposal-13112" role="child" scope="local" type="concept" xtrc="topicref:12;18:83" xtrf="file:/Users/joe.zucker/git/examples/source/dita-spec-1-3/archSpec/base/specialization.ditamap"><?ditaot usertext?><linktext class="- topic/linktext "><?ditaot gentext?>RELAX NG: Coding requirements for specialization modules</linktext><?ditaot genshortdesc?><desc class="- topic/desc ">To be extensible and backward compatible, DITA requires that RELAX NG-based structural   and domain specialization modules conform to well-defined coding requirements.</desc></link></linkpool></linkpool></related-links></concept>