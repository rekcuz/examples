<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="key-based_addressing">
    <title>Indirect
        key<?oxy_insert_start author="Kristen Eberlein" timestamp="20140917T112304-0400"?>-<?oxy_insert_end?><?oxy_delete author="Kristen Eberlein" timestamp="20140917T112303-0400" content=" "?>based
        addressing</title>
    <shortdesc>DITA allows references to be made indirectly by referencing a name for a link target,
        instead of referencing the location of that target. This name is called a key. The DITA
        key<?oxy_insert_start author="Kristen Eberlein" timestamp="20140917T112314-0400"?>-<?oxy_insert_end?><?oxy_delete author="Kristen Eberlein" timestamp="20140917T112313-0400" content=" "?>reference
        mechanism provides a layer of abstraction so that resource locations can be defined globally
        at the DITA map level instead of locally in each topic.</shortdesc>
    <conbody>
        <p>When using DITA topics in the context of different maps, it is often necessary to have
            relationships resolve to different resources. For example, a content reference to a
                <xmlelement>keyword</xmlelement> element that contains a product name might need to
            resolve to a different <xmlelement>keyword</xmlelement> element when used in a different
            product-specific map. The DITA
            key<?oxy_insert_start author="Kristen Eberlein" timestamp="20140917T112358-0400"?>-<?oxy_insert_end?><?oxy_delete author="Kristen Eberlein" timestamp="20140917T112358-0400" content=" "?>reference
            mechanism provides an indirect addressing mechanism that separates references
            (topicrefs, conrefs, cross references, etc.) from the direct address of the target. (A
            direct address is the address specified on the element that defines the key, for
            example, through the <xmlatt>href</xmlatt>  attribute.) Linking elements can refer to
            key names; the key names then are bound to specific resources by maps. Different maps
            can bind the same key names to different resources. The binding of key names to
            resources is determined at processing time based on the current set of key definitions
            for the map
            context<?oxy_insert_start author="Kristen Eberlein" timestamp="20140917T112431-0400"?>,<?oxy_insert_end?>
            rather than from a static binding that is created when a topic or map is authored. </p>
        <p><?oxy_delete author="Kristen Eberlein" timestamp="20140917T112444-0400" content="&lt;draft-comment author=&quot;Kristen James Eberlein&quot; time=&quot;5 April 2010&quot;&gt;&lt;p&gt;To address a review #3 comment from David Helfinstine, I broke the original topic (11 pages!) down into four child topics. (Caveat: This was quick and dirty work on an area that wasn&apos;t my primary responsibility.) This area needs additional work, so I did not add &lt;xmlelement&gt;shortdesc&lt;/xmlelement&gt; elements for all new topics. I have the following concerns:&lt;ul&gt;&lt;li&gt;I think this content is nested too deeply in the architecture.&lt;/li&gt;&lt;li&gt;Ideally, I think the examples should be integrated into the topics, rather than segregated into a separate topic.&lt;/li&gt;&lt;li&gt;Is the syntax for key based addressing covered in the language reference topics? While I think we need a sound overview of key-based addressing the in the arch spec topics, I think users will look first to the language reference when wanting to retrieve information about syntax.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;/draft-comment&gt;"?><?oxy_insert_start author="Kristen Eberlein" timestamp="20140917T112444-0400"?><!--<draft-comment author="Kristen James Eberlein" time="5 April 2010"><p>To address a review #3 comment from David Helfinstine, I broke the original topic (11 pages!) down into four child topics. (Caveat: This was quick and dirty work on an area that wasn't my primary responsibility.) This area needs additional work, so I did not add <xmlelement>shortdesc</xmlelement> elements for all new topics. I have the following concerns:<ul><li>I think this content is nested too deeply in the architecture.</li><li>Ideally, I think the examples should be integrated into the topics, rather than segregated into a separate topic.</li><li>Is the syntax for key based addressing covered in the language reference topics? While I think we need a sound overview of key-based addressing the in the arch spec topics, I think users will look first to the language reference when wanting to retrieve information about syntax.</li></ul></p></draft-comment>--><?oxy_insert_end?></p>
    </conbody>
</concept>
<?oxy_options track_changes="on"?>