<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<concept id="cascading-in-a-ditamap" xml:lang="en-us">
 <title><ph>Cascading of attributes and metadata in a DITA map</ph></title>
 <abstract>
  <shortdesc>Certain map-level attributes and metadata elements cascade throughout a map, which
      facilitates attribute and metadata management. When attributes or metadata elements
        <term>cascade</term>, they apply to the elements that are children of the element where the
      attributes or metadata were specified. Cascading applies to a containment hierarchy, as
      opposed to a element-type hierarchy.</shortdesc>
 </abstract>
 <prolog>
  <metadata>
   <keywords>
    <indexterm>cascading, definition</indexterm>
        <indexterm>definitions<indexterm>cascading</indexterm></indexterm>
   </keywords>
  </metadata>
 </prolog>
 <conbody>
    <!--Commenting out the following para/list/para, as suggested by Stan during the DITA 1.3 phase1 review. Seems redundant with the following info. May need to reinstate some or all of this, if the nested sections become distinct or nested topics.-->
    <!--<p>The following attributes and metadata elements cascade throughout the entire map:</p><ul><li>Attributes set on the <xmlelement>map</xmlelement> element</li><li>Metadata elements that are contained in the <xmlelement>topicmeta</xmlelement> element that is a child of the <xmlelement>map</xmlelement> element</li></ul><p>Attribute values and metadata elements in relationship tables can be applied to entire columns or rows as well as individual cells, a practice that is particularly useful for attribute and metadata management.</p>-->
  <section id="what-cascades">
      <title>Attributes and metadata that cascade</title>
      <p>The following attributes and metadata elements cascade when set on the
          <xmlelement>map</xmlelement> element or when set within a map:<dl>
          <dlentry>
            <dt>Attributes</dt>
            <dd>
              <ul conref="../../common/conref_file.dita#reuse_file/cascading-attributes"
                id="ul_f2j_pwn_yl">
                <li/>
              </ul>
            </dd>
          </dlentry>
          <dlentry id="elems">
            <dt>Metadata elements</dt>
            <dd>
              <ul>
                <li><xmlelement>author</xmlelement>, <xmlelement>source</xmlelement>,
                    <xmlelement>publisher</xmlelement>, <xmlelement>copyright</xmlelement>,
                    <xmlelement>critdates</xmlelement>, <xmlelement>permissions</xmlelement></li>
                <li><xmlelement>audience</xmlelement>, <xmlelement>category</xmlelement>,
                    <xmlelement>prodinfo</xmlelement>, <xmlelement>othermeta</xmlelement></li>
              </ul>
            </dd>
          </dlentry>
        </dl></p>
      <p><ph rev="DITA1.3 proposal-13059">Cascading is additive for attributes and metadata elements
          that accept multiple values, except when the <xmlatt>cascade</xmlatt> attribute is set to
          avoid adding values to attributes.</ph> For attributes that take a single value, the
        closest value defined on a containing element takes effect. In a relationship table,
        row-level metadata is considered more specific than column-level metadata, as shown in the
        following containment hierarchy:<ul id="ul_eef359b5-be87-43ac-bd4b-63e59a57bc97">
          <li><xmlelement>map</xmlelement> (most general)<ul
              id="ul_6ed2888b-b77e-4bda-93bd-b5c3150a7ca1">
              <li><xmlelement>topicref</xmlelement> container (more specific)<ul
                  id="ul_bd838f84-6717-4121-a475-04778eda8774">
                  <li><xmlelement>topicref</xmlelement> (most specific)</li>
                </ul></li>
              <li><xmlelement>reltable</xmlelement> (more specific)<ul
                  id="ul_c8519779-983b-47cb-bb57-9de727da5d75">
                  <li><xmlelement>relcolspec</xmlelement> (more specific)<ul
                      id="ul_b2469034-dcbf-48ff-bd8d-bef887e4220f">
                      <li><xmlelement>relrow</xmlelement> (more specific)<ul
                          id="ul_506fb64d-aa80-4068-a6eb-e50fe57871dd">
                          <li><xmlelement>topicref</xmlelement> (most specific)</li>
                        </ul></li>
                    </ul></li>
                </ul></li>
            </ul></li>
        </ul></p>
      <draft-comment author="Kristen James Eberlein" time="14 July 2009" disposition="open">Would a
        graphic better communicate what we are trying to do with an
        <xmlelement>ul</xmlelement>?</draft-comment>
      <draft-comment author="Kristen Eberlein" time="24 March 2014" disposition="open">Comment by
        Stan Doherty during review #1: "Diagramming these parent-child relationships in some way
        beyond nested lists would help readability. I can't help with debuging DTD/schema/RelaxNG
        stuff, but I can do diagrams . . . might ths be a TC topic to discuss at some point???
        "</draft-comment>
    </section>
    <section rev="DITA1.3 proposal-13059" id="merging-of-cascaded-attrs">
      <title>Merging of cascading attributes</title>
      <p>The <xmlatt>cascade</xmlatt> attribute can be used to modify the additive nature of
        attribute cascading (though it does not turn off cascading altogether). The attribute has
        two predefined values: "merge" and "nomerge".</p>
      <dl conref="../../common/conref_file.dita#reuse_file/cascade-values">
        <dlentry>
          <dt/>
          <dd/>
        </dlentry>
      </dl>
      <p conref="../../common/conref_file.dita#reuse_file/attribute-implementation-tokens"/>
      <p>For example, a processor might define the token "appToken:audience" in order to specify
        cascading and merging behaviors for <b>only</b> the <xmlatt>audience</xmlatt> attribute. The
        following rules apply:<ul>
          <li>The predefined values for the <xmlatt>cascade</xmlatt> attribute <term
              outputclass="RFC-2119" rev="terminology">MUST</term> precede any
            implementation-specific tokens, for example, <codeph>cascade="merge
              appToken:audience"</codeph>.</li>
          <li>Tokens can apply to a set of attributes, specified as part of the
              <xmlatt>cascade</xmlatt> value. In that case, the syntax for specifying those values
            consists of the implementation-specific token, followed by a parenthetical group that
            uses the same syntax as groups within the <xmlatt>audience</xmlatt>,
              <xmlatt>platform</xmlatt>, <xmlatt>product</xmlatt>, and <xmlatt>otherprops</xmlatt>
            attributes. For example, a token that applies to only <xmlatt>platform</xmlatt> and
              <xmlatt>product</xmlatt> could be specified as <codeph>cascade="appname:token(platform
              product)"</codeph>.</li>
        </ul></p>
    </section>
    <example id="cascade-att-examples">
      <title>Examples of the <xmlatt>cascade</xmlatt> attribute in use</title>
      <p>Consider the following code examples:</p>
      <fig id="mapA">
        <title>Map A</title>
        <codeblock>&lt;map audience="a b" cascade="merge">
     &lt;topicref href="topic.dita" audience="c"/>
&lt;/map>
</codeblock>
      </fig>
      <fig id="mapB">
        <title>Map B</title>
        <codeblock>&lt;map audience="a b" cascade="nomerge">
     &lt;topicref href="topic.dita" audience="c"/>
&lt;/map>
</codeblock>
      </fig>
      <p>For map A, the values for the attribute are merged, and the effective value of the
          <xmlatt>audience</xmlatt> attribute for <filepath>topic.dita</filepath> is "a b c". For
        map B, the values for the attribute are not additive, and the effective value of the
          <xmlatt>audience</xmlatt> attribute for <filepath>topic.dita</filepath> is "c".</p>
      <p>In the following example, merging is active at the map level but turned off below:</p>
      <fig id="mapC">
        <title>Map C</title>
        <codeblock>&lt;map platform="a" product="x" cascade="merge">
  &lt;topicref href="one.dita" platform="b" product="y">
    &lt;topicref href="two.dita" cascade="nomerge" product="z"/>
  &lt;/topicref>
&lt;/map></codeblock>
      </fig>
      <p>In map C, the reference to <filepath>one.dita</filepath> has effective merged values of "a
        b" for <xmlatt>platform</xmlatt> and "x y" for <xmlatt>product</xmlatt>.</p>
      <p>The reference to <filepath>two.dita</filepath> turns off merging, so the explicit
          <xmlatt>product</xmlatt> value of "z" is used (it does not merge with ancestor values).
        The <xmlatt>platform</xmlatt> attribute is not present, so the already-merged value of "a b"
        continues to cascade and the effective value of <xmlatt>platform</xmlatt> on this
        reference.</p>
    </example>
  <section id="cascade-att-algorithm">
      <title>Order for processing cascading attributes in a map</title>
      <p>When determining the value of an attribute, processors <term outputclass="RFC-2119"
          rev="terminology">MUST</term> evaluate each attribute on each individual element in a
        specific order; this order is specified in the following list. Applications <term
          outputclass="RFC-2119" rev="terminology">MUST</term> continue through the list until a
        value is established or until the end of the list is reached (at which point no value is
        established for the attribute). In essence, the list provides instructions on how processors
        can construct a map where all attribute values are set and all cascading is complete.</p>
      <p>For example, in the case of <codeph rev="DITA1.2-errata">&lt;topicref toc="yes"></codeph>,
        applications <term outputclass="RFC-2119" rev="terminology">MUST</term> stop at <xref
          href="#cascading-in-a-ditamap/explicit-values" format="dita"/> in the list; a value is
        specified for <xmlatt>toc</xmlatt> in the document instance, so <xmlatt>toc</xmlatt> values
        from containing elements will not cascade to that specific <xmlelement>topicref</xmlelement>
        element. The <codeph>toc="yes"</codeph> setting on that <xmlelement>topicref</xmlelement>
        element will cascade to contained elements, provided those elements reach <xref
          href="#cascading-in-a-ditamap/attributes-cascade" format="dita"/> below when evaluating
        the <xmlatt>toc</xmlatt> attribute.</p>
      <p>For attributes within a map, the following processing order <term outputclass="RFC-2119"
          rev="terminology">MUST</term> occur:<ol id="ol_6eb4fb9c-b56f-4471-bb2d-b183fef5980c">
          <li id="common-start">The <xmlatt>conref</xmlatt> and <xmlatt>keyref</xmlatt> attributes
            are evaluated.</li>
          <li id="explicit-values">The explicit values specified in the document instance are
            evaluated. For example, a <xmlelement>topicref</xmlelement> element with the
              <xmlatt>toc</xmlatt> attribute set to "no" will use that value.</li>
          <li>The default or fixed attribute values are evaluated. For example, the
              <xmlatt>toc</xmlatt> attribute on the <xmlelement>reltable</xmlelement> element has a
            default value of "no".</li>
          <li id="common-end">The default values that are supplied by a controlled values file are
            evaluated.</li>
          <li id="attributes-cascade">The attributes cascade.</li>
          <li>The processing-supplied default values are applied.</li>
          <li>After the attributes are resolved within the map, they cascade to referenced maps.
              <note>The processing-supplied default values do not cascade to other maps. For
              example, most processors will supply a default value of <codeph>toc="yes"</codeph>
              when no <xmlatt>toc</xmlatt> attribute is specified. However, a processor-supplied
              default of <codeph>toc="yes"</codeph>
              <term outputclass="RFC-2119" rev="terminology">MUST</term> not override a value of
                <codeph>toc="no"</codeph> that is set on a referenced map. If the
                <codeph>toc="yes"</codeph> value is explicitly specified, is given as a default
              through a DTD, XSD, RNG, or controlled values file, or cascades from a containing
              element in the map, it <term outputclass="RFC-2119" rev="terminology">MUST</term>
              override a <codeph>toc="no"</codeph> setting on the referenced map. See <xref
                href="map-to-map-cascading-of-metadata.dita"/> for more details.</note></li>
          <li>Repeat steps <xref href="#cascading-in-a-ditamap/common-start" type="li"/> to <xref
              href="#cascading-in-a-ditamap/common-end" type="li"/> for each referenced map.</li>
          <li>The attributes cascade within each referenced map.</li>
          <li>The processing-supplied default values are applied within each referenced map.</li>
          <li>Repeat the process for maps referenced within the referenced maps.</li>
        </ol></p>
    </section>
  <example id="attr-cascade-example">
      <title>Example of metadata elements cascading in a DITA map</title>
      <p>The following code sample illustrates how an information architect can apply certain
        metadata to all the DITA topics in a
        map:<codeblock>&lt;map title="DITA maps" xml:lang="en-us">
	&lt;topicmeta>
		&lt;author>Kristen James Eberlein&lt;/author>
		&lt;copyright>
			&lt;copyryear year="2009"/>
			&lt;copyrholder>OASIS&lt;/copyrholder>
		&lt;/copyright>
	&lt;/topicmeta>
	&lt;topicref href="dita_maps.dita" navtitle="DITA maps">
		&lt;topicref href="definition_ditamaps.dita" navtitle="Definition of DITA maps">&lt;/topicref>
		&lt;topicref href="purpose_ditamaps.dita" navtitle="Purpose of DITA maps">&lt;/topicref>
		&lt;!-- ... -->
       &lt;/topicref>
&lt;/map></codeblock></p>
      <p>The author and copyright information cascades to each of the DITA topics referenced in the
        DITA map. When the DITA map is processed to XHTML, for example, each XHTML file contains the
        metadata information.</p>
    </example>
 </conbody>
</concept>

