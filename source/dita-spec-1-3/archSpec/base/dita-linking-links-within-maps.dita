<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="links-within-maps" xml:lang="en-us">
 <title>Links within maps</title>
 <shortdesc>DITA maps serve primarily to define a navigation hierarchy of topics and non-DITA
  resources. Using relationship tables, maps also can define arbitrary topic-to-topic relationships
  such as related links. Maps also can link to topics or non-DITA resources to establish dependency
  relationships without binding the linked resource to the navigation tree.</shortdesc>
 <conbody>
  <draft-comment author="Kristen Eberlein" time="29 November 2014">
   <p>I have difficulties parsing the the phrase "establish a navigation tree rooted at the root map
    within a map tree." What does this phrase mean? (It was introduced in DITA 1.2.) </p>
   <p>Also, at this point in the spec, we have not yet formally the term <term>root map</term>. It
    does, however, appear 31 times in the draft 1.3 spec and is used as an (undefined) term in the
    terminology topic.</p>
   <p>Similarly, the term <term>map tree</term> is used 13 times, 8 in new-to-1.3 topics. The other
    five instances appear in what was <b>2.1.3.3 DITA linking</b>, see
    http://docs.oasis-open.org/dita/v1.2/os/spec/archSpec/ditalinking.html. No formal definition,
    just the comment that "Links from maps to maps create a 'map tree'. "</p>
  </draft-comment>
  <p>By default, the topic references within a map (but not within a relationship table) establish a
   navigation tree rooted at the root map within a map tree. A topic reference contributes to the
   navigation tree when it specifies a navigation title or references a resource. The
    <xmlatt>collection-type</xmlatt> determines the relationships that are established among the
    <xmlelement>topicref</xmlelement> element and its parent, sibling, and child
    <xmlelement>topicref</xmlelement> elements.</p>
  <p>A <xmlelement>topicref</xmlelement> or <xmlelement>navref</xmlelement> element that references
   a map acts as a form of use-by-reference link to the direct sub-elements of the
    <xmlelement>map</xmlelement> and the relationship tables of the referenced map.<draft-comment
    author="robander" time="March 9 2015">I'm not sure a navref creates a "use-by-reference" link as
    understood elsewhere. The referenced map does not typically contribute to a navigation tree as
    understood by a DITA processor. Same comment with the bulleted list further on. The final para
    in this topic seems to convey that -- maybe it should be up here where we first mention
    navref?</draft-comment><draft-comment author="Kris Eberlein" time="March 9 2015">
    <p>I agree that we should remove the mention of navref here. But if we do so, do we need the
     amended sentence here? Does it state content written elsewhere? If not, would it be better
     placed in the topicref topic? The markup section?</p>
   </draft-comment></p>
  <p>Maps also can contain relationship tables. Relationship tables establish navigation links among
   sets of topics and non-DITA resources. A relationship table defines one or more links of a
   specific relationship type. A map can include any number of relationship tables. Within a map
   tree, the effective set of relationship tables is the union of all the relationship tables in all
   the maps.</p>
  <p>Topic references that specify a <xmlatt>processing-role</xmlatt> value of "resource-only"
   establish dependencies from the map to the associated resources, but they do not bind the
   resources to the navigation tree. Resource-only topic references are typically used for key
   definitions and for topics that hold elements that are used only for content references.</p>
  <p rev="review-2">Information architects can further control whether topic references are included
   in tables of contents by using the <xmlatt>toc</xmlatt> attribute. A topic reference that
   specifies "no" for the <xmlatt>toc</xmlatt> attribute and is not a resource-only topic reference
   still contributes to the navigation tree. The navigation tree encompasses all links that are
   generated by the nesting of <xmlelement>topicref</xmlelement> elements or by values specified by
   the <xmlatt>collection-type</xmlatt> attribute.</p>
  <p>Information architects also can use the <xmlatt>linking</xmlatt> attribute to control how the
   links created by the effective <xmlatt>collection-type</xmlatt> value apply to the resources that
   are associated with the topic reference.</p>
  <!--<draft-comment author="Kristen Eberlein" time="29 November 2014"><p>What is the phrase in above sentence ("links created by the effective <xmlatt>collection-type</xmlatt> value.') attempting to communicate? Is it suggesting that there are ineffective values for the <xmlatt>collection-type</xmlatt> value? </p><p>I suspect that the original intent of the author was to communicate that information architects can use the <xmlatt>linking</xmlatt> attribute to control how links created by the <xmlatt>collection-type</xmlatt> attribute or the nesting of <xmlelement>topicref</xmlelement> elements in the map are rendered.</p><p>FYI, the phrase in question was present in DITA 1.2.</p></draft-comment>-->
  <p>Within maps, subordinate maps can be linked in the following ways:<ul>
    <li>With a <xmlelement>topicref</xmlelement> element and a <xmlatt>format</xmlatt> attribute set
     to "ditamap".</li>
    <li>With a <xmlelement>navref</xmlelement> element</li>
   </ul></p>
  <p>The <xmlelement>navref</xmlelement> element links to an otherwise independent map and indicates
   that the integration of that map's navigation structure into the larger navigation tree is
   deferred so that it can be performed as a final step in any delivery of the rendered content.
   Maps referenced by <xmlelement>navref</xmlelement> do not contribute to the key space of the map
   tree from which they are referenced. The map referenced by <xmlelement>navref</xmlelement> need
   not be available for processing at the time the referencing map is processed.</p>
 </conbody>
</concept>

