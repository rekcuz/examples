<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="cascading-of-attributes-from-map-to-map" rev="review-1">
  <title>Cascading of attributes from map to map</title>
  <shortdesc>Certain elements cascade from map to map, although some of the attributes that cascade
    within a map do not cascade from map to map.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>cascading<indexterm>map-to-map<indexterm>attributes</indexterm></indexterm></indexterm>
        <indexterm>map-to-map cascading<indexterm>attributes</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <p>The following attributes cascade from map to map:<ul id="cascading-attributes">
        <li><xmlatt>audience</xmlatt>, <xmlatt>platform</xmlatt>, <xmlatt>product</xmlatt>,
            <xmlatt>otherprops</xmlatt>, <xmlatt>rev</xmlatt></li>
        <li><xmlatt>props</xmlatt> and any attribute specialized from <xmlatt>props</xmlatt></li>
        <li><xmlatt>linking</xmlatt>, <xmlatt>toc</xmlatt>, <xmlatt>print</xmlatt>,
            <xmlatt>search</xmlatt></li>
        <li><xmlatt>type</xmlatt></li>
        <li><xmlatt>translate</xmlatt></li>
        <li><xmlatt>processing-role</xmlatt></li>
        <li rev="DITA1.3 proposal-13059"><xmlatt>cascade</xmlatt></li>
      </ul></p>
    <draft-comment author="jelovirta" disposition="open">
      <p id="w6aaa">This lis of attributes that cascade should be a complete list that requires no
        filtering. As it stands now and in DITA 1.2 spec, it's a list of attributes followed by a
        second list of attributes that do not apply. When reader wants to get a complete list of
        attributes that cascade, they have to read the whole section, then take the first list and
        remove four attributes from it. </p>
      <p id="w6aab4">I suggest the attribute list be modified to remove the four non-cascading
        attributes and note elements be added to explain the rational why some attributes do now
        cascade. </p>
    </draft-comment>
    <p>Note that the above list excludes the following attributes:<dl>
        <dlentry>
          <dt><xmlatt>format</xmlatt></dt>
          <dd>The <xmlatt>format</xmlatt> attribute must be set to "ditamap" in order to reference a
            map or a branch of a map, so it cannot cascade through to the referenced map.</dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>xml:lang</xmlatt> and <xmlatt>dir</xmlatt></dt>
          <dd>Cascading behavior for <xmlatt>xml:lang</xmlatt> is defined in <xref
              href="xmllang.dita"/>. The <xmlatt>dir</xmlatt> attribute work the same way.</dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>scope</xmlatt></dt>
          <dd>The value of the <xmlatt>scope</xmlatt> attribute describes the map itself, rather
            than the content. When the <xmlatt>scope</xmlatt> attribute is set to "external", it
            indicates that the referenced map itself is external and unavailable, so the value
            cannot cascade into that referenced map.</dd>
        </dlentry>
      </dl></p>
    <p>The <xmlatt>class</xmlatt> attribute is used to determine the processing roles that cascade
      from map to map. See <xref href="cascading-of-roles-in-specialized-maps.dita"/> for more
      information.</p>
    <p>As with values that cascade within a map, the cascading is additive if the attribute permits
      multiple values (such as <xmlatt>audience</xmlatt>). When the attribute only permits one
      value, the cascading value overrides the top-level element.</p>
    <example>
      <title>Example of attributes cascading between maps</title>
      <draft-comment author="robander" time="3 April 2014" disposition="open">Stan commented in
        another topic, but I think the example would be most appropriate somewhere in here:
          <lq>Question (or perhaps a candidate for a clarifying example) -- if I set cascade="merge"
          on a parent/root map and cascade="nomerge" on a child map, would the subordinate
          cascade="nomerge" setting be ignored?? Processing-supplied inheritance gets mentioned in
          the "list," but not cascading behavior/inheritance. </lq><p>I'm not sure where best to
          include it, storing the comment here for the moment.</p></draft-comment>
      <p>For example, assume the following references in
        <filepath>test.ditamap</filepath>:<codeblock>&lt;map>
  &lt;topicref href="a.ditamap" format="ditamap" toc="no"/>
  &lt;mapref   href="b.ditamap" audience="developer"/>
  &lt;topicref href="c.ditamap#branch1" format="ditamap" print="no"/>
  &lt;mapref   href="c.ditamap#branch2" platform="myPlatform"/>
&lt;/map></codeblock></p>
      <ul>
        <li>The map <filepath>a.ditamap</filepath> is treated as if <codeph>toc="no"</codeph> is
          specified on the root <xmlelement>map</xmlelement> element. This means that the topics
          that are referenced by <filepath>a.ditamap</filepath> do not appear in the navigation
          generated by <filepath>test.ditamap</filepath> (except for branches within the map that
          explicitly set <codeph>toc="yes"</codeph>).</li>
        <li>The map <filepath>b.ditamap</filepath> is treated as if
            <codeph>audience="developer"</codeph> is set on the root <xmlelement>map</xmlelement>
          element. If the <xmlatt>audience</xmlatt> attribute is already set on the root
            <xmlelement>map</xmlelement> element within <filepath>b.ditamap</filepath>, the value
          "developer" is added to any existing values.</li>
        <li>The element with <codeph>id="branch1"</codeph> within the map
            <filepath>c.ditamap</filepath> is treated as if <codeph>print="no"</codeph> is specified
          on that element. This means that the topics within the branch with
            <codeph>id="branch1"</codeph> do not appear in the printed output generated by
            <filepath>test.ditamap</filepath> (except for nested branches within that branch that
          explicitly set <codeph>print="yes"</codeph>).</li>
        <li>The element with <codeph>id="branch2"</codeph> within the map
            <filepath>c.ditamap</filepath> is treated as if <codeph>platform="myPlatform"</codeph>
          is specified on that element. If the <xmlatt>platform</xmlatt> attribute is already
          specified on the element with <codeph>id="branch"</codeph>, the value "myPlatform" is
          added to existing values.</li>
      </ul>
    </example>
  </conbody>
</concept>
