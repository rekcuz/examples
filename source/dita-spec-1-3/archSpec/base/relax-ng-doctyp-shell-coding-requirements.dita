<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_rrq_p45_dn" rev="DITA1.3 proposal-13112">
  <title>RELAX NG document-type shell: Coding requirements</title>
  <shortdesc>A document type shell integrates one or more topic type or map type modules, zero or
    more domain modules, and zero or more constraint modules.</shortdesc>
  <conbody>
    <p>RELAX NG document-type shells <term outputclass="RFC-2119" rev="terminology">MUST NOT</term>
      directly declare element types or attributes. A RELAX NG document-type shell <term
        outputclass="RFC-2119" rev="terminology">MUST</term> conform to the following coding
      requirements, as well as the requirements defined in <xref href="using-relax-ng.dita"/>.</p>
    <draft-comment author="robander" time="20 February 2014">Maybe we can get consistent here? Use
      conref? Or does the use of @domains for XSD cause problems?<ul>
        <li>Text from DTD doctype:<p>Each section of the document type shell <ph rev="review-2"
              >must</ph> occur in the following order. The modular DTD approach to specialization
            and constraints relies heavily upon parameter entities. Parameter entities must be
            declared before they are used, so the order defined below is necessary in order to
            support those features while complying with more basic XML parsing rules.</p></li>
        <li>Text from RNG:<p>RELAX NG document-type shells <term outputclass="RFC-2119"
              rev="terminology">MUST NOT</term> directly declare element types or attributes. A
            RELAX NG document-type shell <term outputclass="RFC-2119" rev="terminology">MUST</term>
            conform to the following coding requirements, as well as the requirements defined in
              <xref href="using-relax-ng.dita"/>.</p></li>
        <li>Text from XSD:<p>XSD document type shells <term outputclass="RFC-2119" rev="terminology"
              >MUST NOT</term> directly declare element types or attributes (except for the
              <xmlatt>domains</xmlatt> attribute, which always reflects the details of the domains
            and structural types integrated by the shell).</p></li>
      </ul></draft-comment>
    <p>RELAX NG modules are self-integrating, so that document type shells only need to include
      vocabulary modules; there is no separate specification required in order to integrate domain
      and nested topic elements into the base content models. Also, constraint modules simply
      override the patterns that they constrain directly in the constraint module itself. However,
      the default value for the <xmlatt>domains</xmlatt> attribute cannot automatically be
      constructed using RELAX NG facilities. Thus, the <xmlatt>domains</xmlatt> attribute value has
      to be directly specified in the document type shell. In addition, the names of element types
      that define <xmlatt>id</xmlatt> attributes of type "ID" must be listed in the redefinition of
      the "any" pattern that is required in each document type shell.</p>
    <note>For modules that use the <xmlelement>moduleDesc</xmlelement> element, the
        <xmlatt>domains</xmlatt> attribute contribution <term outputclass="RFC-2119"
        rev="terminology">SHOULD</term> be in the <xmlelement>domainsContribution</xmlelement>
      element. This enables tools to automatically construct the <xmlatt>domains</xmlatt> attribute
      value in document type shells as an aid to authoring or automatically generating document type
        shells.<draft-comment author="Kristen Eberlein" time="15 February 2014" disposition="open"
        >Why is this a note?</draft-comment><draft-comment author="robander" time="16 February 2015"
        >Also: after encountering dubious language in DTD/RNG topics about auto-assembly, do we
        really need to continue making or highlighting rules that are there to enable automatic
        generation of shells? Existing rules for DTD/XSD were never as useful as originally
        imagined, and I don't think the rules designed to aid in auto-assembly actually did
        so.</draft-comment></note>
    <p>Constraint modules are used by importing the constraint module rather than the module that
      the constraint modifies. Constraint modules refer to the base module to be constrained and
      redefine patterns as needed to implement the constraint. In addition, you can disallow base
      types extended by domains by overriding the base type's pattern in the document type shell
      within the reference to the domain module for the domain. In this case, the constraint
      represented by the pattern redefinition <term outputclass="RFC-2119" rev="terminology"
        >MUST</term> be declared in the <xmlatt>domains</xmlatt> attribute. The
        <xmlatt>domains</xmlatt> contribution for the constraint can be documented using a
        <xmlelement>domainsContribution</xmlelement> element from the DITA namespace. For
        example:<codeblock>
  &lt;div>
    &lt;a:documentation>MODULE INCLUSIONS&lt;/a:documentation>
    &lt;include href="topicMod.rng"/>
    &lt;include href="hazardstatementDomainMod.rng"/>
    &lt;include href="highlightDomainMod.rng">
      &lt;ditaarch:domainsContribution
        >(topic hi-d-noUnderline-c)&lt;/ditaarch:domainsContribution>
      &lt;define name="u">
        &lt;notAllowed>&lt;/notAllowed>
      &lt;/define>
    &lt;/include>
    &lt;include href="indexingDomainMod.rng"/>
    &lt;include href="utilitiesDomainMod.rng"/>
  &lt;/div>
</codeblock><draft-comment
        author="Kristen Eberlein" time="15 February 2014" disposition="open">
        <p>Let's be clear about what the above codeblock is illustrating. Is it a constraint module?
          A document type shell that integrates a constraint module that removes
            <xmlelement>u</xmlelement> from the highlighting domain?</p>
        <p>[Eberlein, 5 April 2014: Eliot added the following comments in review #1:</p>
        <p>"The example is exactly what the lead-in paragraph describes: a shell that integrates a
          domain and imposes a constraint directly within the domain inclusion, declaring the
          domains contribution within the include for the domain module being constrained."</p>
        <p>Dick Hamilton added: "I agree, but I don't think it would hurt to introduce the example
          with something like this: "The following example shows how to document the @domains
          contribution in a constraint module that removes the &lt;u> element from the highlight
          domain:"</p>
        <p>Eliot then commented: "It is a shell that has an in-place constraint as described in the
          immediately-preceding paragraph. It is demonstrating the use of the
          @ditaarch:domainsContribution attribute to declare the constraint for use in
          @domains."</p>
      </draft-comment></p>
    <dl>
      <dlentry>
        <dt>Root element declaration</dt>
        <dd>
          <p>Document type shells must use the RELAX NG start declaration to specify the root
            element of the document type. The <xmlelement>start</xmlelement> element <term
              outputclass="RFC-2119" rev="terminology">MUST</term> define exactly one root element,
            and that element <term outputclass="RFC-2119" rev="terminology">MUST</term> be defined
            using a reference to a <codeph><varname>tagname</varname>.element</codeph> pattern.</p>
          <p outputclass="example">For
            example:<codeblock>&lt;div>
  &lt;a:documentation>ROOT ELEMENT DECLARATION&lt;/a:documentation>
  &lt;start combine="choice">
    &lt;ref name="topic.element"/>
  &lt;/start>
&lt;/div></codeblock></p>
        </dd>
      </dlentry>
      <dlentry>
        <dt>Module inclusions</dt>
        <dd>
          <p>The document type shell must include at least the module for the map or topic type that
            the shell is configuring. It also must include the modules for any domain or additional
            structural modules. The document type shell
              <?oxy_attributes rev="&lt;change type=&quot;inserted&quot; author=&quot;ekimber&quot; timestamp=&quot;20131215T103906-0600&quot; /&gt;"?><term
              outputclass="RFC-2119" rev="terminology">MUST</term> include any domain or structural
            modules that are named as dependencies in the <xmlatt>domains</xmlatt> attribute
            value.</p>
          <p outputclass="example">For
            example:<codeblock>&lt;div>
  &lt;a:documentation>MODULE INCLUSIONS&lt;/a:documentation>
  &lt;include href="topicMod.rng"/>
  &lt;include href="highlightDomainMod.rng"/>
  &lt;include href="utilitiesDomainMod.rng"/>
  &lt;include href="indexingDomainMod.rng"/>
  &lt;include href="hazardstatementDomainMod.rng"/>
&lt;/div></codeblock></p>
        </dd>
      </dlentry>
      <dlentry>
        <dt>Override of "any" patterns</dt>
        <dd>
          <p>The "any" pattern is used as content for the <xmlelement>foreign</xmlelement>,
              <xmlelement>unknown</xmlelement> and <xmlelement>required-cleanup</xmlelement>
            elements. The "any" pattern should accept any element with any content or attributes.
            The RELAX NG DTD compatibility processing rules require that any elements that match two
            or more patterns have consistent declarations for all attributes with respect to their
            ID type. In DITA, <xmlelement>topic</xmlelement>, <xmlelement>map</xmlelement>,
              <xmlelement>anchor</xmlelement>, and all specializations of those element declare the
              <xmlatt>id</xmlatt> attribute as an XML ID (datatype "ID"). This requires that shells
            override the "any" pattern to exclude these element types from the pattern that matches
            any element name with any attributes and any content, because this pattern will match
            the <xmlatt>id</xmlatt> attribute without specifying that it is an XML ID, thus
            resulting in an ID type conflict. These elements should be added explicitly to the
            choice group that defines the "any" pattern, and this is done by contributing these
            elements to the "idElements" pattern. The set of element types that have to be reflected
            in this pattern depends on the set of map or topic types and domains integrated by the
            shell, but at a minimum, any topic types or map types have to be listed. For maps, the
              <xmlelement>anchor</xmlelement> element and any specializations of
              <xmlelement>anchor</xmlelement> have to be listed. In addition, foreign vocabularies
            intregrated through specializations of <xmlelement>foreign</xmlelement> may also define
            similar patterns that require the same accommodation (see <xref
              href="foreigncontentspec.dita"/>).<draft-comment author="Kristen Eberlein"
              time="15 February 2014" disposition="open">How do we want to markup a specific
              pattern? <xmlelement>markupname</xmlelement> element with an
                <xmlatt>outputclass</xmlatt> value?</draft-comment></p>
          <p>The pattern "idElements" is defined in the <filepath>commonElementsMod.rng</filepath>
            module as an empty pattern. Modules that define element types with <xmlatt>id</xmlatt>
            attributes of type ID then contribute to this pattern (see <xref
              href="relax-ng-element-type-coding-requirements.dita"/>).</p>
          <p>The general structure of this pattern
            is:<codeblock>&lt;div>
  &lt;a:documentation>OVERRIDE OF "any" PATTERNS&lt;/a:documentation>
  &lt;define name="any">
    &lt;zeroOrMore>
      &lt;choice>
        &lt;ref name="idElements"/>
        &lt;element>
          &lt;anyName>
            &lt;except>
              &lt;name><varname>tagname</varname>&lt;/name>
            &lt;/except>
          &lt;/anyName>
          &lt;zeroOrMore>
            &lt;attribute>
              &lt;anyName/>
            &lt;/attribute>
          &lt;/zeroOrMore>
          &lt;ref name="any"/>
        &lt;/element>
        &lt;text/>
      &lt;/choice>
    &lt;/zeroOrMore>
  &lt;/define>
&lt;/div></codeblock></p>
          <p>Where the <xmlelement>name</xmlelement> element within the
              <xmlelement>except</xmlelement> element is repeated for each element type that is used
            from the document type shell that defines the <xmlatt>id</xmlatt> attribute as type
            "ID".</p>
          <draft-comment author="Kristen Eberlein" time="6 April 2014" disposition="open">
            <p>Comments from review #1: </p>
            <p>"Eliot Kimber: "We may need to say something about providing for foreign domains,
              which require you to include excusions for the namespaces used by those domains."</p>
            <p>Rewrite suggested by Dick Hamilton: "Repeat the <xmlelement>name</xmlelement> element
              within the <xmlelement>except</xmlelement> for each element type in the document type
              shell that defines the @id attribute as type "ID".</p>
          </draft-comment>
        </dd>
      </dlentry>
    </dl>
    <example>
      <title>Example: Document type shell for a topic information type</title>
      <p>The following example illustrates the RELAX NG markup used to construct a document type
        shell for the strict task information type:</p>
      <codeblock rev="review-2">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="../../../checkShell.sch" schematypens="http://purl.oclc.org/dsdl/schematron"?>
&lt;grammar xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:dita="http://dita.oasis-open.org/architecture/2005/"
         xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">
  &lt;moduleDesc xmlns="http://dita.oasis-open.org/architecture/2005/">
      &lt;moduleTitle>DITA Task Shell&lt;/moduleTitle>
      &lt;headerComment xml:space="preserve">
=============================================================
                   HEADER                                    
=============================================================
 MODULE:    DITA Task Shell                                  
 VERSION:   1.3                                              
 DATE:      March 2014                                    
                                                             
=============================================================

=============================================================
                   PUBLIC DOCUMENT TYPE DEFINITION           
                   TYPICAL INVOCATION                        
                                                             
 Refer to this file by the following public identifier or an
      appropriate system identifier: 
      
PUBLIC "-//OASIS//DTD DITA Task//EN"

The public ID above refers to the latest version of this DTD.
     To refer to this specific version, you may use this value:
     
PUBLIC "-//OASIS//DTD DITA 1.3 Task//EN"                          

=============================================================
SYSTEM:     Darwin Information Typing Architecture (DITA)    
                                                             
PURPOSE:    DTD to describe DITA Tasks                       
                                                             
ORIGINAL CREATION DATE:                                      
            March 2001                                       
                                                             
            (C) Copyright OASIS Open 2005, 2014.             
            (C) Copyright IBM Corporation 2001, 2004.        
            All Rights Reserved.                             
                                                             
 UPDATES:                                                    
   2006.06.07 RDA: Added indexing domain                     
   2006.06.21 RDA: Added props attribute extensions          
   2008.02.01 RDA: Added reference to task.ent               
   2008.02.12 RDA: Modify imbeds to use specific 1.2 version 
   2008.04.15 RDA: Added hazard domain                       
   2014.03.13 WEK: Updated for DITA 1.3, reimplemented as RNG
=============================================================
&lt;/headerComment>
      &lt;moduleMetadata>
         &lt;moduleType>topicshell&lt;/moduleType>
         &lt;moduleShortName>task&lt;/moduleShortName>
         &lt;shellPublicIds>
            &lt;dtdShell>-//OASIS//DTD DITA&lt;var presep=" " name="ditaver"/> Task//EN&lt;/dtdShell>
            &lt;xsdShell>urn:oasis:names:tc:dita:xsd:task.xsd&lt;var presep=":" name="ditaver"/>&lt;/xsdShell>
            &lt;rncShell>urn:oasis:names:tc:dita:rnc:task.rnc&lt;var presep=":" name="ditaver"/>&lt;/rncShell>
            &lt;rngShell>urn:oasis:names:tc:dita:rng:task.rng&lt;var presep=":" name="ditaver"/>&lt;/rngShell>
         &lt;/shellPublicIds>
      &lt;/moduleMetadata>
  &lt;/moduleDesc>

  &lt;div>
      &lt;a:documentation> ROOT ELEMENT DECLARATION &lt;/a:documentation>
      &lt;start>
         &lt;ref name="task.element"/>
      &lt;/start>

  &lt;/div>
  &lt;div>
      &lt;a:documentation> DITA DOMAINS ATTRIBUTE &lt;/a:documentation>
      &lt;define name="domains-att" combine="interleave">
         &lt;optional>
            &lt;attribute name="domains"
                       a:defaultValue="(topic abbrev-d)
                         (topic equation-d)
                         (topic hazard-d)
                         (topic hi-d)
                         (topic indexing-d)
                         (topic markup-d xml-d)
                         (topic markup-d)
                         (topic mathml-d)
                         (topic pr-d)
                         (topic relmgmt-d)
                         (topic svg-d)
                         (topic sw-d)
                         (topic task strictTaskbody-c)
                         (topic task)
                         (topic topic)
                         (topic ui-d)
                         (topic ut-d)
                         a(props deliveryTarget)"/>
         &lt;/optional>
      &lt;/define>

  &lt;/div>
  &lt;div>
      &lt;a:documentation>CONTENT CONSTRAINT INTEGRATION&lt;/a:documentation>
      &lt;include href="strictTaskbodyConstraintMod.rng">
         &lt;define name="task-info-types">
            &lt;ref name="task.element"/>
         &lt;/define>            
      &lt;/include>
  &lt;/div>

  &lt;div>
      &lt;a:documentation> MODULE INCLUSIONS &lt;/a:documentation>
      &lt;include href="../../base/rng/topicMod.rng"/>
      &lt;include href="abbreviateDomainMod.rng"/>
      &lt;include href="../../base/rng/deliveryTargetAttDomainMod.rng" dita:since="1.3"/>
      &lt;include href="equationDomainMod.rng" dita:since="1.3"/>
      &lt;include href="../../base/rng/hazardstatementDomainMod.rng"/>
      &lt;include href="../../base/rng/highlightDomainMod.rng"/>
      &lt;include href="../../base/rng/indexingDomainMod.rng"/>
      &lt;include href="markupDomainMod.rng" dita:since="1.3"/>
      &lt;include href="mathmlDomainMod.rng" dita:since="1.3"/>
      &lt;include href="programmingDomainMod.rng"/>
      &lt;include href="releaseManagementDomainMod.rng"/>
      &lt;include href="softwareDomainMod.rng"/>
      &lt;include href="svgDomainMod.rng" dita:since="1.3"/>
      &lt;include href="uiDomainMod.rng"/>
      &lt;include href="../../base/rng/utilitiesDomainMod.rng"/>
      &lt;include href="xmlDomainMod.rng" dita:since="1.3"/>

  &lt;/div>
  &lt;div>
      &lt;a:documentation> ID-DEFINING-ELEMENT OVERRIDES &lt;/a:documentation>
      &lt;define name="any">
         &lt;zeroOrMore>
            &lt;choice>
               &lt;ref name="idElements"/>
               &lt;element>
                  &lt;anyName>
                     &lt;except>
                        &lt;name>topic&lt;/name>
                        &lt;name>task&lt;/name>
                        &lt;nsName ns="http://www.w3.org/2000/svg"/>
                        &lt;nsName ns="http://www.w3.org/1998/Math/MathML"/>
                     &lt;/except>
                  &lt;/anyName>
                  &lt;zeroOrMore>
                     &lt;attribute>
                        &lt;anyName/>
                     &lt;/attribute>
                  &lt;/zeroOrMore>
                  &lt;ref name="any"/>
               &lt;/element>
               &lt;text/>
            &lt;/choice>
         &lt;/zeroOrMore>
      &lt;/define>
  &lt;/div>
&lt;/grammar></codeblock>
    </example>
    <example>
      <title>Example: Document type shell for a map information type</title>
      <p>The following example illustrates the RELAX NG markup used to construct a document type
        shell for the base map information type:</p>
      <codeblock rev="review-2">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="../../../checkShell.sch" schematypens="http://purl.oclc.org/dsdl/schematron"?>
&lt;?xml-model href="../../vocabularyModuleDesc/rng/vocabularyModuleDesc.rng"
                         schematypens="http://relaxng.org/ns/structure/1.0"?>
&lt;grammar xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:dita="http://dita.oasis-open.org/architecture/2005/"
         xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">
  &lt;moduleDesc xmlns="http://dita.oasis-open.org/architecture/2005/">
      &lt;moduleTitle>DITA Base Map Shell&lt;/moduleTitle>
      &lt;headerComment xml:space="preserve">
=============================================================
                              HEADER           
=============================================================
 MODULE:    DITA Base MAP (only base domains)
 VERSION:   1.3
 DATE:      March 2014
                                                             
=============================================================

=============================================================
                   PUBLIC DOCUMENT TYPE DEFINITION
                       TYPICAL INVOCATION
                                                             
Refer to this file by the following public identifier or an
     appropriate system identifier:
     
PUBLIC "-//OASIS//DTD DITA Base Map//EN"

The public ID above refers to the latest version of this DTD.
     To refer to this specific version, you may use this value:
     
PUBLIC "-//OASIS//DTD DITA 1.3 Base Map//EN"

=============================================================
SYSTEM:     Darwin Information Typing Architecture (DITA)
                                                             
PURPOSE:    DTD to describe DITA maps
                                                             
ORIGINAL CREATION DATE:
            April 2010
                                                             
            (C) Copyright OASIS Open 2010, 2014
            All Rights Reserved.
                                                             
 UPDATES:
   2010.09.20 RDA: Add topic-based domains
   2014.03.13 WEK: Updated for DITA 1.3, reimplemented as RNG
=============================================================
&lt;/headerComment>
      &lt;moduleMetadata>
         &lt;moduleType>mapshell&lt;/moduleType>
         &lt;moduleShortName>basemap&lt;/moduleShortName>
         &lt;shellPublicIds>
            &lt;dtdShell>-//OASIS//DTD DITA&lt;var presep=" " name="ditaver"/> Base Map//EN&lt;/dtdShell>
            &lt;xsdShell>urn:oasis:names:tc:dita:xsd:basemap.xsd&lt;var presep=":" name="ditaver"/>
            &lt;/xsdShell>
            &lt;rncShell>urn:oasis:names:tc:dita:rnc:basemap.rnc&lt;var presep=":" name="ditaver"/>
            &lt;/rncShell>
            &lt;rngShell>urn:oasis:names:tc:dita:rng:basemap.rng&lt;var presep=":" name="ditaver"/>
            &lt;/rngShell>
         &lt;/shellPublicIds>
      &lt;/moduleMetadata>
  &lt;/moduleDesc>

  &lt;div>
      &lt;a:documentation>ROOT ELEMENT DECLARATION&lt;/a:documentation>
      &lt;start>
         &lt;ref name="map.element"/>
      &lt;/start>
  &lt;/div>
  &lt;div>
      &lt;a:documentation>DITA DOMAINS ATTRIBUTE&lt;/a:documentation>

      &lt;define name="domains-att">
         &lt;optional>
            &lt;attribute name="domains"
                       a:defaultValue="(map map)
                         (topic delay-d)
                         (map ditavalref-d)
                         (topic hazard-d)
                         (topic hi-d)
                         (topic indexing-d)
                         (map mapgroup-d)
                         (topic ut-d)
                         a(props deliveryTarget)"/>
         &lt;/optional>
      &lt;/define>


  &lt;/div>
  &lt;div>
      &lt;a:documentation>MODULE INCLUSIONS&lt;/a:documentation>

      &lt;include href="mapMod.rng"/>
      &lt;include href="mapGroupDomainMod.rng"/>

      &lt;include href="delayResolutionDomainMod.rng"/>
      &lt;include href="deliveryTargetAttDomainMod.rng" dita:since="1.3"/>
      &lt;include href="ditavalrefDomainMod.rng" dita:since="1.3"/>
      &lt;include href="indexingDomainMod.rng"/>
      &lt;include href="hazardstatementDomainMod.rng"/>
      &lt;include href="highlightDomainMod.rng"/>
      &lt;include href="utilitiesDomainMod.rng"/>
  &lt;/div>
  &lt;div>
      &lt;a:documentation>ID-DEFINING-ELEMENT OVERRIDES&lt;/a:documentation>

      &lt;define name="any">
         &lt;zeroOrMore>
            &lt;choice>
               &lt;ref name="idElements"/>
               &lt;element>
                  &lt;anyName>
                     &lt;except>
                        &lt;name>map&lt;/name>
                        &lt;name>anchor&lt;/name>
                     &lt;/except>
                  &lt;/anyName>
                  &lt;zeroOrMore>
                     &lt;attribute>
                        &lt;anyName/>
                     &lt;/attribute>
                  &lt;/zeroOrMore>
                  &lt;ref name="any"/>
               &lt;/element>
               &lt;text/>
            &lt;/choice>
         &lt;/zeroOrMore>
      &lt;/define>
  &lt;/div>
&lt;/grammar></codeblock>
    </example>
  </conbody>
</concept>
