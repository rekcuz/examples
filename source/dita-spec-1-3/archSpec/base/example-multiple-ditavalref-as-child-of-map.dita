<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="example-multiple-ditavalref-as-child-of-map" rev="review-2">
  <title>Example: Multiple <xmlelement>ditavalref</xmlelement> as a child of
      <xmlelement>map</xmlelement> in a root map</title>
  <shortdesc>Using multiple <xmlelement>ditavalref</xmlelement> as a direct child of the
      <xmlelement>map</xmlelement> element in a root map is equivalent to setting multiple sets of
    independent global filtering conditions for that root map.</shortdesc>
  <conbody>
    <example id="multiple-ditavalref-as-child-of-map">
      <note>Unlike most other examples of branch filtering, this example cannot be rewritten using
        alternate markup that avoids having multiple <xmlelement>ditavalref</xmlelement> elements as
        children of the same grouping element.</note>
      <p>The following root map is equivalent to processing all the contents of the map with the
        conditions in the <filepath>mac.ditaval</filepath> file and again with the
          <filepath>linux.ditaval</filepath> file. If additional conditions are provided externally
        (for example, as a parameter to the publishing process), the global conditions take
        precedence.</p>
      <fig id="fig_ihb_dfh_1r">
        <title><filepath>input.ditamap</filepath></title>
        <codeblock>&lt;map>
  &lt;title>Setting up my product 
on &lt;keyword platform="mac">Mac&lt;/keyword>&lt;keyword platform="linux">Linux&lt;/keyword>&lt;/title>
  &lt;topicmeta>
    &lt;othermeta platform="mac"   name="ProductID" content="1234M"/>
    &lt;othermeta platform="linux" name="ProductID" content="1234L"/>
  &lt;/topicmeta>
  &lt;ditavalref href="mac.ditaval"/>
  &lt;ditavalref href="linux.ditaval"/>
  &lt;!-- lots of content, including relationship tables -->
&lt;/map></codeblock>
      </fig>
      <fig id="fig_xpd_2fh_1r">
        <title>Contents of <filepath>mac.ditaval</filepath></title>
        <codeblock>&lt;val>
  &lt;prop att="platform" val="mac"   action="include"/>
  &lt;prop att="platform" val="linux" action="exclude"/>
&lt;/val></codeblock>
      </fig>
      <fig id="fig_zwb_hfh_1r">
        <title>Contents of <filepath>linux.ditaval</filepath></title>
        <codeblock>&lt;val>
  &lt;prop att="platform" val="mac"   action="exclude"/>
  &lt;prop att="platform" val="linux" action="include"/>
&lt;/val></codeblock>
      </fig>
      <p>Because the title and metadata each contain filterable content, processing the conditions
        referenced by <xmlelement>ditavalref</xmlelement> will result in two variants of the title
        and common metadata. While this cannot be expressed using valid DITA markup, it is
        conceptually similar to something like the following.</p>
      <codeblock>&lt;!-- The following wrapperElement is not a real DITA element.
     It is used here purely as an example to illustrate one possible 
     way of picturing the conditions. -->
&lt;wrapperElement>
  &lt;map>
    &lt;title>Setting up my product on &lt;keyword platform="mac">Mac&lt;/keyword>&lt;/title>
    &lt;topicmeta>
      &lt;othermeta platform="mac"   name="ProductID" content="1234M"/>
    &lt;/topicmeta>
    &lt;ditavalref href="mac.ditaval"/>
    &lt;!-- lots of content, including relationship tables -->
  &lt;/map>
  &lt;map>
    &lt;title>Setting up my product on &lt;keyword platform="linux">Linux&lt;/keyword>&lt;/title>
    &lt;topicmeta>
      &lt;othermeta platform="linux" name="ProductID" content="1234L"/>
    &lt;/topicmeta>
    &lt;ditavalref href="linux.ditaval"/>
    &lt;!-- lots of content, including relationship tables -->
  &lt;/map>
&lt;/wrapperElement></codeblock>
      <p>How this map is rendered is implementation dependent. If this root map is rendered as a
        PDF, possible renditions might include the following:</p>
      <ul>
        <li>Two PDFs, with one using the conditions from <filepath>mac.ditaval</filepath> and
          another using the conditions from <filepath>linux.ditaval</filepath></li>
        <li>One PDF, with a title page that includes each filtered variant of the title and product
          ID, followed by mac-specific and linux-specific renderings of the content as chapters in
          the PDF</li>
        <li>One PDF, with the first set of filter conditions used to set book level titles and
          metadata, followed by content filtered with those conditions, followed by content filtered
          with conditions from the remaining <xmlelement>ditavalref</xmlelement> element.</li>
      </ul>
    </example>
  </conbody>
</concept>
