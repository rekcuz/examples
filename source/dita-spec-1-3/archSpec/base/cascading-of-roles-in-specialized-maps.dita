<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="cascading-of-roles-in-specialized-maps" rev="review-1">
 <title>Cascading of roles from map to map</title>
 <shortdesc rev="DITA1.2 review-2">When specialized <xmlelement>topicref</xmlelement> elements (such
    as <xmlelement>chapter</xmlelement> or <xmlelement>mapref</xmlelement>) reference a map, they
    typically imply a semantic role for the referenced content. </shortdesc>
 <prolog>
  <metadata>
   <keywords>
    <indexterm>cascading<indexterm>map-to-map<indexterm>exceptions</indexterm></indexterm></indexterm>
    <indexterm>map-to-map cascading<indexterm>exceptons</indexterm></indexterm>
   </keywords>
  </metadata>
 </prolog>
 <conbody>
    <p rev="DITA1.3 review-2">The semantic role reflects the <xmlatt>class</xmlatt> hierarchy of the
      referencing <xmlelement>topicref</xmlelement> element; it is equivalent to having the
        <xmlatt>class</xmlatt> attribute from the referencing <xmlelement>topicref</xmlelement>
      cascade to the top-level <xmlelement>topicref</xmlelement> elements in the referenced map.
      Although this cascade behavior is not universal, there are general guidelines for when
        <xmlatt>class</xmlatt> values should be replaced.</p>
  <p>When a <xmlelement>topicref</xmlelement> element or a specialization of a
    <xmlelement>topicref</xmlelement> element references a DITA resource, it defines a role for that
   resource. In some cases this role is straightforward, such as when a
    <xmlelement>topicref</xmlelement> element references a DITA topic (giving it the already known
   role of "topic"), or when a <xmlelement>mapref</xmlelement> element references a DITA map (giving
   it the role of "DITA map").</p>
  <p>Unless otherwise instructed, a specialized <xmlelement>topicref</xmlelement> element that
   references a map supplies a role for the referenced content. This means that, in effect, the
    <xmlatt>class</xmlatt> attribute of the referencing element cascades to top-level topicref
   elements in the referenced map. In situations where this should not happen - such as all elements
   from the mapgroup domain - the non-default behavior should be clearly specified.</p>
  <p>For example, when a <xmlelement>chapter</xmlelement> element from the bookmap specialization
      references a map, it supplies a role of "chapter" for each top-level
        <xmlelement>topicref</xmlelement> element in the referenced map. When the
        <xmlelement>chapter</xmlelement> element references a branch in another map, it supplies a
      role of "chapter" for that branch. The <xmlatt>class</xmlatt> attribute for
        <xmlelement>chapter</xmlelement> ("- map/topicref bookmap/chapter ") cascades to the
      top-level <xmlelement>topicref</xmlelement> element in the nested map, although it does not
      cascade any further.</p>
  <p>Alternatively, the <xmlelement>mapref</xmlelement> element in the mapgroup domain is a
   convenience element; the top-level <xmlelement>topicref</xmlelement> elements in the map
   referenced by a <xmlelement>mapref</xmlelement> element <term outputclass="RFC-2119"
    rev="terminology">MUST NOT</term> be processed as if they are <xmlelement>mapref</xmlelement>
   elements. The <xmlatt>class</xmlatt> attribute from the <xmlelement>mapref</xmlelement> element
   ("+ map/topicref mapgroup-d/mapref ") does not cascade to the referenced map.</p>
  <p>In some cases, preserving the role of the referencing element might result in out-of-context
   content. For example, a <xmlelement>chapter</xmlelement> element that references a bookmap might
   pull in <xmlelement>part</xmlelement> elements that contain nested
    <xmlelement>chapter</xmlelement> elements. Treating the <xmlelement>part</xmlelement> element as
   a <xmlelement>chapter</xmlelement> will result in a chapter that nests other chapters, which is
   not valid in bookmap and might not be understandable by processors. The result is implementation
   specific; processors <term outputclass="RFC-2119" rev="terminology">MAY</term> choose to treat
   this as an error, issue a warning, or simply assign new roles to the problematic elements.</p>
  <example>
   <title>Example of cascading roles between maps</title>
   <p>Consider the scenario of a <xmlelement>chapter</xmlelement> element that references a DITA
    map. This scenario could take several forms:<dl>
     <dlentry>
      <dt>Referenced map contains a single top-level <xmlelement>topicref</xmlelement> element</dt>
      <dd>The entire branch functions as if it were included in the bookmap; the top-level
        <xmlelement>topicref</xmlelement> element is processed as if it were the
        <xmlelement>chapter</xmlelement> element.</dd>
     </dlentry>
     <dlentry>
      <dt>Referenced map contains multiple top-level <xmlelement>topicref</xmlelement> elements</dt>
      <dd>Each top-level <xmlelement>topicref</xmlelement> element is processed as if it were a
        <xmlelement>chapter</xmlelement> element (the referencing element).</dd>
     </dlentry>
     <dlentry>
      <dt>Referenced map contains a single <xmlelement>appendix</xmlelement> element</dt>
      <dd>The <xmlelement>appendix</xmlelement> element is processed as it were a
        <xmlelement>chapter</xmlelement> element.</dd>
     </dlentry>
     <dlentry>
      <dt>Referenced map contains a single <xmlelement>part</xmlelement> element, with nested
        <xmlelement>chapter</xmlelement> elements.</dt>
      <dd>The <xmlelement>part</xmlelement> element is processed as it were a chapter element.
       Nested <xmlelement>chapter</xmlelement> elements might not be understandable by processors;
       applications <term outputclass="RFC-2119" rev="terminology">MAY</term> recover as described
       above.</dd>
     </dlentry>
     <dlentry>
      <dt><xmlelement>chapter</xmlelement> element references a single
        <xmlelement>topicref</xmlelement> element rather than a map</dt>
      <dd>The referenced <xmlelement>topicref</xmlelement> element is processed as if it were a
        <xmlelement>chapter</xmlelement> element.</dd>
     </dlentry>
    </dl></p>
  </example>
 </conbody>
</concept>
