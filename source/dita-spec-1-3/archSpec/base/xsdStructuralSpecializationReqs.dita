<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<concept id="xsdStructuralSpecializationReqs" xml:lang="en-us">
  <title>XML Schema: Coding requirements for structural modules</title>
  <shortdesc>An XSD structural module declares a top-level map or topic type, implemented as a pair
    of XSD documents, one that defines groups used to integrate and override the type and one that
    defines the element types specific to the type.</shortdesc>
  <conbody>
    <p>A structural type module <term outputclass="RFC-2119" rev="terminology">MUST</term> conform
      to the following coding requirements in addition to the general module coding requirements: </p>
    <section>
      <title>Module files</title>
      <p>A structural vocabulary module <term outputclass="RFC-2119" rev="terminology">MUST</term>
        have two files:</p>
      <ul id="ul_D7BFFD862DE84CBABE9FC4A34BFD430C">
        <li id="li_5E6A30823E6646B582EEDAACFDB332C0">A module schema document.</li>
        <li id="li_CA93076E32D344DBB656231FD7D63406">A module group definition schema document.</li>
      </ul>
    </section>
    <section id="section_48CC341A288448D39DC32181F8D1C3ED">
      <title>Structural module schema document</title>
      <p>The root element <term outputclass="RFC-2119" rev="terminology">MUST</term> reference the
        <xmlatt>DITAArchVersion</xmlatt> attribute and the <xmlatt>domains</xmlatt> attribute. These attributes give processors a
        reliable way to check the architecture version and look up the list of domains available in
        the document type. The <xmlatt>DITAArchVersion</xmlatt> attribute is referenced as in the following
        example:</p>
      <codeblock>&lt;xs:attribute name="id" type="xs:ID" use="required"/&gt;
&lt;xs:attribute ref="ditaarch:DITAArchVersion" /&gt;</codeblock>
      <p>See <xref format="dita" href="xsdShellDoctypeCodeReq.dita#topicShellPattern"/> for
        information on how to set the values for the <codeph>domains</codeph> attibute for XSD
        shells. </p>
      <p>For topic modules, the last position in the content model <term outputclass="RFC-2119"
          rev="terminology">MUST</term> be the
          <codeph><varname>topictype</varname>-info-types</codeph> nested topics group as in the
        following example of the root element of the concept topic:</p>
      <codeblock>&lt;xs:complexType name="concept.class"&gt;
  &lt;xs:sequence&gt;
    &lt;xs:group ref="title"/&gt;
    &lt;xs:group ref="titlealts" minOccurs="0"/&gt;
    &lt;xs:choice minOccurs="0"&gt;
      &lt;xs:group ref="shortdesc" /&gt;
      &lt;xs:group ref="abstract" /&gt;
    &lt;/xs:choice&gt;
    &lt;xs:group ref="prolog" minOccurs="0"/&gt;
    &lt;xs:group ref="conbody" minOccurs="0"/&gt;
    &lt;xs:group ref="related-links" minOccurs="0"/&gt;
    &lt;xs:group ref="concept-info-types" minOccurs="0" maxOccurs="unbounded"/&gt;
  &lt;/xs:sequence&gt;
  ...
&lt;/xs:complexType&gt;</codeblock>
    </section>
    <section>
      <title>Topic module schema document</title>
      <p>For topic modules, the module schema document must define an info-type model group. The
        name of this group is the topic element name plus <codeph>-info-types</codeph>. Thus, the
        info-type model group for the concept topic type is <codeph>concept-info-types</codeph>. The
        following example shows how <codeph>concept-info-types</codeph> is defined:
        <codeblock id="topicinfotype">&lt;xs:group name="concept-info-types"&gt;
  &lt;xs:choice&gt;
    &lt;xs:group ref="concept" minOccurs="0"/&gt;
    &lt;xs:group ref="info-types" minOccurs="0"/&gt;
  &lt;/xs:choice&gt;
&lt;/xs:group&gt;</codeblock></p>
    </section>
    <section rev="DITA1.3   proposal-13121">
     <title>Domains attribute information for the XML Schema document-type shell integration</title>
      <p>A structural vocabulary module <term outputclass="RFC-2119" rev="terminology">SHOULD</term>
        include the a value for the <i>domain usage declarations</i> that's used in the
          <xmlatt>domains</xmlatt> attribute in the XML Schema document-type shell in the modules.
        It <term outputclass="RFC-2119" rev="terminology">MUST</term> be defined using the element
          <xmlelement>dita:domainsModule</xmlelement>. For the XML Schema's the
          <xmlelement>/dita:domainsModule</xmlelement> element, in the structural vocabulary module,
        is equivalent to <xmlatt>domains</xmlatt> attribute definition in the
          <filepath>.ent</filepath> files for the DTDs.</p>
      <draft-comment author="ekimber" disposition="open">
        <p>A structural vocabulary module SHOULD include the a value for the domain usage
          declaration that's used in the @domains attribute in the XML Schema document-type shell in
          the modules. It MUST be defined using the element &lt;dita:domainsModule&gt;. For the XML
          Schema's the &lt;/dita:domainsModule&gt; element, in the structural vocabulary module, is
          equivalent to @domains attribute definition in the .ent files for the DTDs.</p>
      </draft-comment>
      <p>For example:</p>
      <codeblock> &lt;xs:annotation&gt;
    &lt;xs:appinfo&gt;
       &lt;dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic task)&lt;/dita:domainsModule&gt;
    &lt;/xs:appinfo&gt;
    &lt;xs:documentation&gt;&lt;/xs:documentation&gt;
 &lt;/xs:annotation&gt;</codeblock>
    </section>
  </conbody>
</concept>
